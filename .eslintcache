[{"C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\index.tsx":"1","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\reportWebVitals.ts":"2","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\App.tsx":"3","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\molecules\\Header.tsx":"4","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\pages\\Main.tsx":"5","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\unreuse\\Store.tsx":"6","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\molecules\\LoginButtonGroup.tsx":"7","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\organisms\\Modal.tsx":"8","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\pages\\Home.tsx":"9","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\pages\\Track.tsx":"10","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\atoms\\Button.tsx":"11","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\atoms\\Img.tsx":"12","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\unreuse\\Banner.tsx":"13","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\organisms\\ProjectGroup.tsx":"14","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\organisms\\ProjectBanner.tsx":"15","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\templates\\ArticleContents.tsx":"16","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\templates\\TrackList.tsx":"17","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\atoms\\Span.tsx":"18","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\organisms\\Project.tsx":"19","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\molecules\\ProjectDescription.tsx":"20","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\molecules\\ProjectList.tsx":"21","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\molecules\\Article.tsx":"22","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\index.tsx":"23","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\reportWebVitals.ts":"24","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\App.tsx":"25","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\molecules\\Header.tsx":"26","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\molecules\\LoginButtonGroup.tsx":"27","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\molecules\\Footer.tsx":"28","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\organisms\\Modal.tsx":"29","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\unreuse\\Store.tsx":"30","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\pages\\Main.tsx":"31","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\pages\\Home.tsx":"32","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\pages\\Track.tsx":"33","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\atoms\\Button.tsx":"34","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\config\\index.ts":"35","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\organisms\\ProjectGroup.tsx":"36","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\unreuse\\Banner.tsx":"37","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\organisms\\ProjectBanner.tsx":"38","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\unreuse\\About.tsx":"39","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\templates\\ArticleContents.tsx":"40","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\templates\\TrackList.tsx":"41","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\organisms\\Project.tsx":"42","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\atoms\\Span.tsx":"43","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\molecules\\ProjectDescription.tsx":"44","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\molecules\\ProjectList.tsx":"45","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\atoms\\P.tsx":"46","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\molecules\\Article.tsx":"47","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\molecules\\Callback.tsx":"48"},{"size":271,"mtime":1611212795043,"results":"49","hashOfConfig":"50"},{"size":431,"mtime":1610435047890,"results":"51","hashOfConfig":"50"},{"size":1421,"mtime":1613035087838,"results":"52","hashOfConfig":"50"},{"size":1623,"mtime":1613035087841,"results":"53","hashOfConfig":"50"},{"size":325,"mtime":1612585691697,"results":"54","hashOfConfig":"50"},{"size":559,"mtime":1610441037781,"results":"55","hashOfConfig":"50"},{"size":1068,"mtime":1613436044361,"results":"56","hashOfConfig":"50"},{"size":5662,"mtime":1613464167486,"results":"57","hashOfConfig":"50"},{"size":1523,"mtime":1613035087843,"results":"58","hashOfConfig":"50"},{"size":905,"mtime":1612586714939,"results":"59","hashOfConfig":"50"},{"size":1015,"mtime":1613035087839,"results":"60","hashOfConfig":"50"},{"size":373,"mtime":1612512087756,"results":"61","hashOfConfig":"50"},{"size":963,"mtime":1613035087844,"results":"62","hashOfConfig":"50"},{"size":1783,"mtime":1613033768490,"results":"63","hashOfConfig":"50"},{"size":349,"mtime":1613035087842,"results":"64","hashOfConfig":"50"},{"size":920,"mtime":1613033768491,"results":"65","hashOfConfig":"50"},{"size":1489,"mtime":1613111742695,"results":"66","hashOfConfig":"50"},{"size":784,"mtime":1612584884634,"results":"67","hashOfConfig":"50"},{"size":897,"mtime":1613033768489,"results":"68","hashOfConfig":"50"},{"size":734,"mtime":1612513477517,"results":"69","hashOfConfig":"50"},{"size":579,"mtime":1612586807086,"results":"70","hashOfConfig":"50"},{"size":742,"mtime":1612618129191,"results":"71","hashOfConfig":"50"},{"size":271,"mtime":1611212795043,"results":"72","hashOfConfig":"73"},{"size":431,"mtime":1610435047890,"results":"74","hashOfConfig":"73"},{"size":1505,"mtime":1614064710123,"results":"75","hashOfConfig":"73"},{"size":2317,"mtime":1614068702288,"results":"76","hashOfConfig":"73"},{"size":1178,"mtime":1614065152678,"results":"77","hashOfConfig":"73"},{"size":1908,"mtime":1613801037477,"results":"78","hashOfConfig":"73"},{"size":4798,"mtime":1614068331259,"results":"79","hashOfConfig":"73"},{"size":559,"mtime":1610441037781,"results":"80","hashOfConfig":"73"},{"size":443,"mtime":1614066148296,"results":"81","hashOfConfig":"73"},{"size":402,"mtime":1614065099394,"results":"82","hashOfConfig":"73"},{"size":1183,"mtime":1614064154618,"results":"83","hashOfConfig":"73"},{"size":1553,"mtime":1613718460115,"results":"84","hashOfConfig":"73"},{"size":796,"mtime":1614040735425,"results":"85","hashOfConfig":"73"},{"size":1761,"mtime":1614068335074,"results":"86","hashOfConfig":"73"},{"size":1583,"mtime":1614055407678,"results":"87","hashOfConfig":"73"},{"size":850,"mtime":1613726915760,"results":"88","hashOfConfig":"73"},{"size":1369,"mtime":1614055481128,"results":"89","hashOfConfig":"73"},{"size":1336,"mtime":1614068338393,"results":"90","hashOfConfig":"73"},{"size":1947,"mtime":1614068342512,"results":"91","hashOfConfig":"73"},{"size":902,"mtime":1613718585605,"results":"92","hashOfConfig":"73"},{"size":784,"mtime":1613718330877,"results":"93","hashOfConfig":"73"},{"size":554,"mtime":1613717427705,"results":"94","hashOfConfig":"73"},{"size":742,"mtime":1613718525064,"results":"95","hashOfConfig":"73"},{"size":766,"mtime":1613716603379,"results":"96","hashOfConfig":"73"},{"size":969,"mtime":1613718499965,"results":"97","hashOfConfig":"73"},{"size":1176,"mtime":1614068769323,"results":"98","hashOfConfig":"73"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},"1mygvkc",{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"101"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"101"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"101"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"101"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"101"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"101"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"101"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"101"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"101"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"101"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"101"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"101"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},"7qho7m",{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"159"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"159"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"159"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"159"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"159"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"159"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"159"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"159"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"159"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"159"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"159"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"159"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"159"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"159"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"222"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"159"},"C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\index.tsx",[],[],"C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\reportWebVitals.ts",[],"C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\App.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\molecules\\Header.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\pages\\Main.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\unreuse\\Store.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\molecules\\LoginButtonGroup.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\organisms\\Modal.tsx",["226","227","228","229","230","231","232","233"],"import React, { useContext, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport dotenv from 'dotenv';\nimport { LoginContext } from '../../App';\nimport axios from 'axios';\nimport { Http2ServerRequest } from 'http2';\ndotenv.config();\n\nconst ModalWrapper = styled.div`\n  id: ${props => props.id};\n  box-sizing: border-box;\n  display: ${visible => (visible ? 'block' : 'none')};\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1000;\n  overflow: auto;\n  outline: 0;\n  onclick: ${props => props.onclick};\n`;\n\nconst ModalOverlay = styled.div`\n  box-sizing: border-box;\n  color: ${({ color }) => color || 'white'};\n  display: ${({ visible }) => (visible ? 'block' : 'none')};\n  position: fixed;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.6);\n  z-index: 999;\n`;\n\nconst ModalInner = styled.div`\n  box-sizing: border-box;\n  position: relative;\n  box-shadow: 0 0 6px 0 rgba(0, 0, 0, 0.5);\n  background-color: #fff;\n  border-radius: 10px;\n  width: 360px;\n  max-width: 480px;\n  top: 50%;\n  transform: translateY(-50%);\n  margin: 0 auto;\n  padding: 40px 20px;\n`;\n\ntype modalProps = {\n  className?: string;\n  visible?: boolean;\n  children?: JSX.Element;\n};\n\nconst Modal = ({ className, visible, children }: modalProps): JSX.Element => {\n  const { state, onclick } = useContext(LoginContext);\n  const [id, setID] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [message, setMessage] = useState('정보를 입력 후 로그인을 눌려주세요.');\n  const [messageColor, setMEssageColor] = useState('red');\n\n  useEffect(() => {\n    if (localStorage.getItem('cookie')) {\n      setMessage('이미 로그인에 성공한 유저입니다.');\n      setMEssageColor('blue');\n    }\n  }, [state]);\n\n  const changeID = (event: any) => setID(event.target.value);\n  const changePassword = (event: any) => setPassword(event.target.value);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const clickOutside = ({ target }: any) => {\n    if (state && document.getElementById('modalBackground') === target) {\n      onclick();\n    }\n  };\n\n  const login = () => {\n    const url = process.env.REACT_APP_SERVER_ADDRESS + '/auth/local';\n    // const url = process.env.REACT_APP_DEVELOP_SERVER + '/auth/local';\n    try {\n      // fetch(url, {\n      //   method: 'POST',\n      //   headers: {\n      //     'Content-Type': 'application/json',\n      //     'Access-Control-Allow-Origin': '*',\n      //     'Access-Control-Allow-Methods': '*',\n      //     'Access-Control-Max-Age': '3600',\n      //     'Access-Control-Allow-Headers':\n      //       'Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers, Authorization',\n      //   },\n      //   credentials: 'same-origin',\n      //   body: JSON.stringify({\n      //     USER_ID: id,\n      //     PASSWORD: password,\n      //   }),\n      // })\n      //   .then(res => {\n      //     console.log('res1 : ', res);\n      //     return res.json();\n      //   })\n      //   .then(res => {\n      //     console.log('res2 : ', res);\n      //     if (res.message === 'success') {\n      //       localStorage.setItem('cookie', res.result);\n      //       setMessage('이미 로그인에 성공한 유저입니다.');\n      //       setMEssageColor('blue');\n      //       onclick();\n      //       window.location.href = String(\n      //         process.env.REACT_APP_CLIENT_ROOT_ADDRESS,\n      //       );\n      //     } else {\n      //       setMessage('아이디와 비밀번호를 다시 확인해주세요.');\n      //       setMEssageColor('red');\n      //       return;\n      //     }\n      //   });\n\n      axios\n        .get(url)\n        .then(res => console.log(res))\n        .catch(error => console.error(error));\n    } catch (error) {\n      setMessage('알 수 없는 이유로 로그인에 실패하였습니다.');\n      setMEssageColor('red');\n    }\n  };\n\n  const isEnter = (event: any) => event.charCode === 13 && login();\n  return (\n    <ModalOverlay visible={visible}>\n      <ModalWrapper\n        id={'modalBackground'}\n        className={className}\n        tabIndex={-1}\n        visible={visible}\n        onClick={clickOutside}\n      >\n        <ModalInner tabIndex={0} className=\"modalInner\">\n          <h1 style={{ color: 'black', margin: '0px', marginBottom: '5px' }}>\n            Login\n          </h1>\n          <input\n            placeholder=\"아이디를 입력해주세요.\"\n            style={{ width: '100%', height: '30px', marginBottom: '5px' }}\n            id=\"user_id\"\n            name=\"user_id\"\n            // value=\"201634101\"\n            onChange={changeID}\n          ></input>\n          <input\n            type=\"password\"\n            placeholder=\"비밀번호를 입력해주세요.\"\n            style={{ width: '100%', height: '30px', marginBottom: '5px' }}\n            id=\"password\"\n            name=\"password\"\n            // value=\"kakasoo\"\n            onChange={changePassword}\n            onKeyPress={isEnter}\n          ></input>\n          <button\n            style={{ width: '100%', height: '30px', marginBottom: '5px' }}\n            id=\"login_button\"\n            onClick={login}\n          >\n            login\n          </button>\n          {/* <button onClick={authCheck}> auth check </button> */}\n          <span\n            style={{\n              color: messageColor,\n              fontSize: '12px',\n              fontWeight: 'bold',\n            }}\n          >\n            {message}\n          </span>\n          {children}\n        </ModalInner>\n      </ModalWrapper>\n    </ModalOverlay>\n  );\n};\n\nexport default Modal;\n","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\pages\\Home.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\pages\\Track.tsx",["234","235"],"import React from 'react';\nimport { Route } from 'react-router-dom';\nimport styled from 'styled-components';\nimport ProjectBanner from '../organisms/ProjectBanner';\nimport ProjectGroup from '../organisms/ProjectGroup';\nimport TrackList from '../templates/TrackList';\nimport ArticleContents from '../templates/ArticleContents';\n\nconst StyledTrack = styled.div`\n  position: absolute;\n  width: 100%;\n  top: 60px;\n`;\n\nconst Track = ({ match }: any): JSX.Element => {\n  return (\n    <StyledTrack>\n      <ProjectBanner />\n      <>\n        <Route exact path={match.path} component={TrackList}></Route>\n        <Route\n          exact\n          path={`${match.path}/:id`}\n          component={ProjectGroup}\n        ></Route>\n        <Route\n          path={`${match.path}/:id/articles/:article_id`}\n          component={ArticleContents}\n        ></Route>\n      </>\n    </StyledTrack>\n  );\n};\n\nexport default Track;\n","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\atoms\\Button.tsx",["236"],"import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledButton = styled.button`\r\n  display: inline-flex;\r\n\toutline: none;\r\n\tborder:transparent;\r\n  color: ${props => props.color || 'white'};\r\n  cursor: pointer;\r\n  padding-left: 1rem;\r\n  padding-right: 1rem;\r\n  padding-top: 5px;\r\n\r\n  width: ${props => props.width || '100px'};\r\n  border-radius: ${props => (props.radius ? '10px' : '0px')};\r\n\r\n\theight: 2.25rem;\r\n  font-size: 1.1rem;\r\n  background: ${props => props.background || 'transparent'};\r\n  margin-top: 20px;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  onclick: ${props => props.onclick};\r\n  }\r\n`;\r\n\r\ntype ButtonType = {\r\n  children?: any;\r\n  radius?: boolean;\r\n  color?: string;\r\n  width?: string;\r\n  onclick?: () => void;\r\n  background?: string;\r\n};\r\n\r\nconst Button = ({ onclick, children, ...rest }: ButtonType): JSX.Element => {\r\n  return (\r\n    <StyledButton onClick={onclick} {...rest}>\r\n      {children}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\atoms\\Img.tsx",["237","238","239"],"import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledImg = styled.img<any>`\n  src: ${props => props.src};\n  overflow: hidden;\n  height: ${props => props.height || '100%'};\n  margin-top: ${props => props.marginTop || '10px'};\n`;\n\nconst Img = ({ ...rest }: any): JSX.Element => {\n  return <StyledImg {...rest}></StyledImg>;\n};\n\nexport default Img;\n","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\unreuse\\Banner.tsx",["240"],"import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Banner = (): JSX.Element => {\r\n  return (\r\n    <>\r\n      <div style={{ height: '60px' }}></div>\r\n      <img src=\"/images/main_img.jpg\"></img>\r\n      <img\r\n        style={{\r\n          position: 'absolute',\r\n          top: 'calc(17.5% + 60px)',\r\n          left: '17.7%',\r\n        }}\r\n        src=\"/images/main_luckydata.png\"\r\n      ></img>\r\n      <div\r\n        style={{\r\n          position: 'absolute',\r\n          left: '18.8%',\r\n          top: 'calc(35.1% + 60px)',\r\n          color: 'white',\r\n        }}\r\n      >\r\n        <p style={{ margin: '0px' }}>운수대통에서 비롯된 말로</p>\r\n        <p style={{ margin: '0px' }}>대자를 데이터의 데자로 바꾼 말이다</p>\r\n        <p style={{ margin: '0px' }}>\r\n          운수가 좋은 날에는 데이터 분석이 잘 될 거라는 의미이다.\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\organisms\\ProjectGroup.tsx",["241","242","243"],"import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Span from '../atoms/Span';\r\nimport Project from './Project';\r\n\r\nconst StyledProjectGroup = styled.div`\r\n  top: 119px;\r\n  padding-top: 62px;\r\n  padding-left: 17.7%;\r\n  padding-right: 17.7%;\r\n`;\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nconst ProjectGroup = (props: any): JSX.Element => {\r\n  const [projects, setProjects] = useState<any>([]);\r\n  // TODO : TRACK_ID를 받을 수 있도록 해야 한다.\r\n  const TRACK_ID = props.match.params.id;\r\n\r\n  const getProjectsOfUser = () => {\r\n    const cookie = localStorage.getItem('cookie');\r\n    try {\r\n      fetch(process.env.REACT_APP_SERVER_ADDRESS + `/user_tracks/${TRACK_ID}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          Authorization: cookie || '',\r\n        },\r\n      })\r\n        .then(res => res.json())\r\n        .then(res => setProjects(res.result));\r\n    } catch (error) {\r\n      throw new Error('authCheck error');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProjectsOfUser();\r\n  }, []);\r\n\r\n  return (\r\n    <StyledProjectGroup>\r\n      <Span\r\n        fontSize=\"18pt\"\r\n        lineHeight=\"30px\"\r\n        text=\"PROJECT\"\r\n        letterSpacing=\"-0.72pt\"\r\n        marginRight=\"236px\"\r\n      ></Span>\r\n      <Span\r\n        fontSize=\"18pt\"\r\n        lineHeight=\"30pt\"\r\n        text=\"POST\"\r\n        letterSpacing=\"-0.72pt\"\r\n      ></Span>\r\n      {projects?.map((project: any, index: number) => (\r\n        <Project\r\n          key={index}\r\n          projectNum={project.pid}\r\n          title={project.ptitle}\r\n          articles={project.child}\r\n          trackUrl={props.match.url}\r\n        ></Project>\r\n      ))}\r\n    </StyledProjectGroup>\r\n  );\r\n};\r\n\r\nexport default ProjectGroup;\r\n","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\organisms\\ProjectBanner.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\templates\\ArticleContents.tsx",["244","245","246","247"],"import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ArticleContents = (props: any): JSX.Element => {\r\n  const curArticle = props.match.params.article_id;\r\n  const [article, setArticle]: any = useState([]);\r\n\r\n  const getArticle = () => {\r\n    const cookie = localStorage.getItem('cookie');\r\n    try {\r\n      fetch(process.env.REACT_APP_SERVER_ADDRESS + `/articles/${curArticle}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          Authorization: cookie || '',\r\n        },\r\n      })\r\n        .then(res => res.json())\r\n        .then(res => setArticle(res.result));\r\n    } catch (error) {\r\n      throw new Error('authCheck error');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getArticle();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>TITLE : {article.TITLE}</h1>\r\n      <h2>CONTENTS : {article.CONTENTS}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArticleContents;\r\n","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\templates\\TrackList.tsx",["248","249","250"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport Button from '../atoms/Button';\r\nimport Span from '../atoms/Span';\r\n\r\nconst StyledTrackList = styled.div`\r\n  margin-left: 17.2%;\r\n  margin-right: 17.2%;\r\n  margin-top: 3.2%;\r\n  border: 1px solid red;\r\n`;\r\n\r\nconst StyledOneTrack = styled.div`\r\n  border: 1px solid green;\r\n`;\r\n\r\nconst TrackList = (props: any): JSX.Element => {\r\n  const [tracks, setTracks] = useState([]);\r\n\r\n  const getTracks = () => {\r\n    const cookie = localStorage.getItem('cookie');\r\n    try {\r\n      fetch(process.env.REACT_APP_SERVER_ADDRESS + `/tracks`, {\r\n        method: 'GET',\r\n        headers: {\r\n          Authorization: cookie || '',\r\n        },\r\n      })\r\n        .then(res => res.json())\r\n        .then(res => setTracks(res.result));\r\n    } catch (error) {\r\n      throw new Error('authCheck error');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTracks();\r\n  }, []);\r\n\r\n  return (\r\n    <StyledTrackList>\r\n      {tracks?.map((track: any, index) => (\r\n        <StyledOneTrack key={index}>\r\n          <Link\r\n            to={`${props.match.url}/${track.ID}`}\r\n            style={{ fontSize: '30px' }}\r\n          >\r\n            <Button key={index} width=\"100%\">\r\n              <Span text={track.DEPARTMENT} width=\"100%\"></Span>\r\n            </Button>\r\n          </Link>\r\n        </StyledOneTrack>\r\n      ))}\r\n    </StyledTrackList>\r\n  );\r\n};\r\n\r\nexport default TrackList;\r\n","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\atoms\\Span.tsx",["251","252","253"],"import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledSpan = styled.span<any>`\n  position: ${props => props.positon || 'static'};\n  padding-left: ${props => props.paddingLeft};\n  padding-right: ${props => props.paddingRight};\n  padding-top: ${props => props.paddingTop};\n  padding-bottom: ${props => props.paddingBottom};\n  font-size: ${props => props.fontSize};\n  line-height: ${props => props.lineHeight};\n  letter-spacing: ${props => props.letterSpacing};\n  margin-right: ${props => props.marginRight};\n  color: ${props => props.color || 'black'};\n  width: ${props => props.width};\n  height: ${props => props.height};\n`;\n\nconst Span = ({ text, ...rest }: any): JSX.Element => {\n  return <StyledSpan {...rest}>{text}</StyledSpan>;\n};\n\nexport default Span;\n","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\organisms\\Project.tsx",["254","255","256"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ProjectDescription from '../molecules/ProjectDescription';\r\nimport ProjectList from '../molecules/ProjectList';\r\n\r\nconst StyledProject = styled.div<any>`\r\n  width: 100%;\r\n  height: 300px;\r\n  border: 1px solid rgb(246, 246, 246);\r\n  border-radius: 10px;\r\n  box-shadow: 1.2px 2.7px 8px 0px rgba(0, 0, 0, 0.08);\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Project = (props: any): JSX.Element => {\r\n  const project_id = props.projectNum;\r\n  const title = props.title;\r\n  const articles = props.articles;\r\n  const trackUrl = props.trackUrl;\r\n\r\n  return (\r\n    <StyledProject>\r\n      <ProjectDescription title={title}></ProjectDescription>\r\n      <ProjectList\r\n        projectNum={project_id}\r\n        articles={articles}\r\n        trackUrl={trackUrl}\r\n      ></ProjectList>\r\n    </StyledProject>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\molecules\\ProjectDescription.tsx",["257","258","259","260"],"import React from 'react';\nimport styled from 'styled-components';\nimport Span from '../atoms/Span';\n\nconst ProjectDescription = (props: any) => {\n  const title = props.title;\n  return (\n    <div>\n      <Span\n        position=\"absolute\"\n        paddingLeft=\"1.5%\"\n        paddingTop=\"26px\"\n        fontSize=\"14px\"\n        lineHeight=\"30px\"\n        letterSpacing=\"-0.56pt\"\n        color=\"rgb(51,51,51)\"\n        text=\"DAY-2\"\n      ></Span>\n      <Span\n        position=\"absolute\"\n        paddingLeft=\"1.5%\"\n        paddingTop=\"84px\"\n        fontSize=\"24px\"\n        lineHeight=\"32px\"\n        letterSpacing=\"-0.96pt\"\n        color=\"rgb(51,51,51)\"\n        text={title}\n      ></Span>\n    </div>\n  );\n};\n\nexport default ProjectDescription;\n","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\molecules\\ProjectList.tsx",["261","262","263","264","265","266"],"import React from 'react';\nimport Span from '../atoms/Span';\nimport Article from './Article';\n\nconst ProjectList = (props: any) => {\n  const articles = props.articles;\n  const trackUrl = props.trackUrl;\n\n  return (\n    <div style={{ width: '100%' }}>\n      {articles?.map((article: any, index: any) => (\n        <Article\n          key={index}\n          paddingLeft=\"312px\"\n          paddingBottom=\"20px\"\n          title={article.atitle}\n          articleID={article.aid}\n          trackUrl={trackUrl}\n        ></Article>\n      ))}\n    </div>\n  );\n};\n\nexport default ProjectList;\n","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\molecules\\Article.tsx",["267","268","269","270"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Button from '../atoms/Button';\nimport Span from '../atoms/Span';\n\nconst StyledArticle = styled.div<any>`\n  key: ${props => props.index};\n  padding-left: 312px;\n  padding-bottom: 20px;\n`;\n\nconst Article = (props: any) => {\n  const title = props.title;\n  const articleID = props.articleID;\n  const trackUrl = props.trackUrl;\n\n  return (\n    <StyledArticle>\n      <Link\n        to={`${trackUrl}/articles/${articleID}`}\n        style={{ fontSize: '30px' }}\n      >\n        <Button width=\"100%\">\n          <Span text={title} width=\"100%\"></Span>\n        </Button>\n      </Link>\n    </StyledArticle>\n  );\n};\n\nexport default Article;\n","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\index.tsx",[],[],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\App.tsx",["271"],"import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Header from './components/molecules/Header';\r\nimport Modal from './components/organisms/Modal';\r\nimport LoginButtonGroup from './components/molecules/LoginButtonGroup';\r\nimport Main from './components/pages/Main';\r\nimport Store from './components/unreuse/Store';\r\nimport Footer from './components/molecules/Footer';\r\n\r\ndeclare module 'react' {\r\n  interface HTMLAttributes<T> extends AriaAttributes, DOMAttributes<T> {\r\n    visible?: boolean;\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    onclick?: () => any;\r\n    radius?: boolean;\r\n    width?: string;\r\n    background?: string;\r\n  }\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport const LoginContext = React.createContext<any | null>(null);\r\n\r\nexport const App = (): JSX.Element => {\r\n  const [loginState, setLoginState] = useState(false);\r\n\r\n  return (\r\n    <div className=\"App\" id=\"App\">\r\n      <Store>\r\n        <Router>\r\n          <LoginContext.Provider\r\n            value={{\r\n              visible: loginState,\r\n              state: loginState,\r\n              onclick: setLoginState,\r\n            }}\r\n          >\r\n            <Modal visible={loginState}>\r\n              <LoginButtonGroup />\r\n            </Modal>\r\n            <Header />\r\n            <Main />\r\n            <Footer />\r\n          </LoginContext.Provider>\r\n        </Router>\r\n      </Store>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\molecules\\Header.tsx",["272"],"import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport Button from '../atoms/Button';\r\nimport { LoginContext } from '../../App';\r\n\r\nconst StyledHeader = styled.div`\r\n  display: flex;\r\n  height: 60px;\r\n  max-width: 1240px;\r\n  background: ${props => props.color};\r\n  border-bottom: 2px solid #eeeeee;\r\n  justify-content: space-between;\r\n  margin: 0 auto;\r\n  padding: 0 8px;\r\n  z-index: 10;\r\n`;\r\n\r\nconst HeaderLogoButton = styled.div`\r\n  height: 40px;\r\n  width: 192px;\r\n  background-image: url('/images/header_logo_black.png');\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst HeaderButtonGroup = styled.div`\r\n  display: float;\r\n  padding-top: 13px;\r\n`;\r\n\r\nconst HeaderButton = styled.button`\r\n  color: #333333;\r\n  border: 0;\r\n  outline: none;\r\n  background-color: rgba(0, 0, 0, 0);\r\n  font-size: 12pt;\r\n  margin-right: 50px;\r\n  &: hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Header = (): JSX.Element => {\r\n  const { state, onclick } = useContext(LoginContext);\r\n  const isLogin = localStorage.getItem('token') ? true : false;\r\n  const onclickLoginButton = () => onclick(!state);\r\n\r\n  const onclickLogoutButton = () => {\r\n    localStorage.setItem('token', '');\r\n    window.location.href = '/';\r\n  };\r\n\r\n  const buttonText = isLogin ? 'LOGOUT' : 'LOGIN';\r\n  const loginOrOutclick = isLogin ? onclickLogoutButton : onclickLoginButton;\r\n\r\n  console.log(isLogin);\r\n  return (\r\n    <StyledHeader color=\"white\">\r\n      <Link to=\"/\">\r\n        <HeaderLogoButton />\r\n      </Link>\r\n      <HeaderButtonGroup>\r\n        {isLogin ? (\r\n          <Link to=\"/tracks\">\r\n            <HeaderButton>TRACK</HeaderButton>\r\n          </Link>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Button\r\n          color=\"#FFFFFF\"\r\n          onclick={loginOrOutclick}\r\n          height=\"34px\"\r\n          fontSize=\"14px\"\r\n          borderRadius=\"35px\"\r\n          background=\"#121137\"\r\n          lineHeight=\"1\"\r\n          marginTop=\"auto\"\r\n          marginBottom=\"auto\"\r\n        >\r\n          {buttonText}\r\n        </Button>\r\n        <a href=\"https://github.com/login/oauth/authorize?client_id=Iv1.9ef5921b3847e124&redirect_uri=http://127.0.0.1:3000/callback\">\r\n          github\r\n        </a>\r\n      </HeaderButtonGroup>\r\n    </StyledHeader>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\molecules\\LoginButtonGroup.tsx",["273","274","275","276","277","278"],"import React from 'react';\r\nimport Button from '../atoms/Button';\r\nimport { Link, Route } from 'react-router-dom';\r\n\r\nconst LoginButtonGroup = (props: any): JSX.Element => {\r\n  const loginButtons = [\r\n    'github',\r\n    'Unavailable. Plz wait.',\r\n    'Unavailable. Plz wait.',\r\n  ];\r\n  const loginColor = ['rgb(70,70,70)', 'rgb(221,75,57)', 'rgb(59,89,152)'];\r\n  const onLogin = (auth: string): (() => void) => {\r\n    const login = (name: string) => async () => {\r\n      // const url = `/api/auth/${name}`;\r\n      // console.log('url : ', url);\r\n      // const response = await fetch(url);\r\n      // console.log('response : ', response);\r\n      // window.location.href = response.url;\r\n    };\r\n    return login(auth);\r\n  };\r\n  console.log('props : ', props);\r\n\r\n  return (\r\n    <>\r\n      {loginButtons.map((strategy, index) => (\r\n        <Button\r\n          width=\"100%\"\r\n          marginTop=\"5px\"\r\n          marginBottom=\"5px\"\r\n          background={loginColor[index]}\r\n          key={index}\r\n          onclick={onLogin(loginButtons[index])}\r\n          children={`Connect with ${strategy}`}\r\n        ></Button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginButtonGroup;\r\n","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\molecules\\Footer.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\organisms\\Modal.tsx",["279","280","281"],"import React, { useContext, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { LoginContext } from '../../App';\nimport setting from '../../config';\n\nconst ModalWrapper = styled.div`\n  id: ${props => props.id};\n  box-sizing: border-box;\n  display: ${visible => (visible ? 'block' : 'none')};\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1000;\n  overflow: auto;\n  outline: 0;\n  onclick: ${props => props.onclick};\n`;\n\nconst ModalOverlay = styled.div`\n  box-sizing: border-box;\n  color: ${({ color }) => color || 'white'};\n  display: ${({ visible }) => (visible ? 'block' : 'none')};\n  position: fixed;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.6);\n  z-index: 999;\n`;\n\nconst ModalInner = styled.div`\n  box-sizing: border-box;\n  position: relative;\n  box-shadow: 0 0 6px 0 rgba(0, 0, 0, 0.5);\n  background-color: #fff;\n  border-radius: 10px;\n  width: 360px;\n  max-width: 480px;\n  top: 50%;\n  transform: translateY(-50%);\n  margin: 0 auto;\n  padding: 40px 20px;\n`;\n\ntype modalProps = {\n  className?: string;\n  visible?: boolean;\n  children?: JSX.Element;\n};\n\nconst Modal = ({ className, visible, children }: modalProps): JSX.Element => {\n  const { state, onclick } = useContext(LoginContext);\n  const [id, setID] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [message, setMessage] = useState('정보를 입력 후 로그인을 눌려주세요.');\n  const [messageColor, setMEssageColor] = useState('red');\n\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      setMessage('이미 로그인에 성공한 유저입니다.');\n      setMEssageColor('blue');\n    }\n  }, [state]);\n\n  const changeID = (event: any) => setID(event.target.value);\n  const changePassword = (event: any) => setPassword(event.target.value);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const clickOutside = ({ target }: any) => {\n    if (state && document.getElementById('modalBackground') === target) {\n      onclick();\n    }\n  };\n\n  const login = () => {\n    const url = '/api/auth/local';\n    try {\n      fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'same-origin',\n        body: JSON.stringify({\n          USER_ID: id,\n          PASSWORD: password,\n        }),\n      })\n        .then(res => {\n          return res.json();\n        })\n        .then(res => {\n          if (res.message === 'success') {\n            localStorage.setItem('token', res.result);\n            setMessage('이미 로그인에 성공한 유저입니다.');\n            setMEssageColor('blue');\n            onclick();\n            window.location.href = String(setting.CLIENT_ROOT);\n          } else {\n            setMessage('아이디와 비밀번호를 다시 확인해주세요.');\n            setMEssageColor('red');\n            return;\n          }\n        });\n    } catch (error) {\n      setMessage('알 수 없는 이유로 로그인에 실패하였습니다.');\n      setMEssageColor('red');\n    }\n  };\n\n  const isEnter = (event: any) => event.charCode === 13 && login();\n  return (\n    <ModalOverlay visible={visible}>\n      <ModalWrapper\n        id={'modalBackground'}\n        className={className}\n        tabIndex={-1}\n        visible={visible}\n        onClick={clickOutside}\n      >\n        <ModalInner tabIndex={0} className=\"modalInner\">\n          <h1 style={{ color: 'black', margin: '0px', marginBottom: '5px' }}>\n            Login\n          </h1>\n          <input\n            placeholder=\"아이디를 입력해주세요.\"\n            style={{ width: '100%', height: '30px', marginBottom: '5px' }}\n            id=\"user_id\"\n            name=\"user_id\"\n            // value=\"201634101\"\n            onChange={changeID}\n          ></input>\n          <input\n            type=\"password\"\n            placeholder=\"비밀번호를 입력해주세요.\"\n            style={{ width: '100%', height: '30px', marginBottom: '5px' }}\n            id=\"password\"\n            name=\"password\"\n            // value=\"kakasoo\"\n            onChange={changePassword}\n            onKeyPress={isEnter}\n          ></input>\n          <button\n            style={{ width: '100%', height: '30px', marginBottom: '5px' }}\n            id=\"login_button\"\n            onClick={login}\n          >\n            login\n          </button>\n          {/* <button onClick={authCheck}> auth check </button> */}\n          <span\n            style={{\n              color: messageColor,\n              fontSize: '12px',\n              fontWeight: 'bold',\n            }}\n          >\n            {message}\n          </span>\n          {children}\n        </ModalInner>\n      </ModalWrapper>\n    </ModalOverlay>\n  );\n};\n\nexport default Modal;\n","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\unreuse\\Store.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\pages\\Main.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\pages\\Home.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\pages\\Track.tsx",["282","283"],"import React from 'react';\r\nimport { Route, BrowserRouter } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport ProjectBanner from '../organisms/ProjectBanner';\r\nimport ProjectGroup from '../organisms/ProjectGroup';\r\nimport TrackList from '../templates/TrackList';\r\nimport ArticleContents from '../templates/ArticleContents';\r\n\r\nconst StyledTrack = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  top: 60px;\r\n`;\r\n\r\nconst TrackInnerWrapper = styled.div`\r\n  width: 100%;\r\n  max-width: 1240px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Track = ({ match }: any): JSX.Element => {\r\n  return (\r\n    <BrowserRouter>\r\n      <StyledTrack>\r\n        <ProjectBanner />\r\n        <TrackInnerWrapper>\r\n          <Route exact path={match.path} component={TrackList}></Route>\r\n          <Route\r\n            exact\r\n            path={`${match.path}/:id`}\r\n            component={ProjectGroup}\r\n          ></Route>\r\n          <Route\r\n            exact\r\n            path={`${match.path}/:id/articles/:article_id`}\r\n            component={ArticleContents}\r\n          ></Route>\r\n        </TrackInnerWrapper>\r\n      </StyledTrack>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Track;\r\n","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\atoms\\Button.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\config\\index.ts",["284","285","286"],"import dotenv from 'dotenv';\ndotenv.config();\n\n// 로컬 서버에게 요청을 보낼 것인가, 아니면 aws 서버에게 요청을 보낼 것인가?\nconst setting: any = {\n  development: {\n    SERVER_ADDRESS: process.env.REACT_APP_DEVELOP_SERVER,\n    CLIENT_ROOT: process.env.REACT_APP_CLIENT_DEV_ROOT_ADDRESS,\n  },\n  production: {\n    SERVER_ADDRESS: process.env.REACT_APP_SERVER_ADDRESS,\n    CLIENT_ROOT: process.env.REACT_APP_CLIENT_ROOT_ADDRESS,\n  },\n};\n\n// local에서는 REACT_APP_STAGE로 표현하고 있지만, nginx에서는 NODE_ENV=production으로 나온다.\nconsole.log('ENV : ', process.env);\nconst option = 'development';\n// process.env.NODE_ENV ||\n// (process.env.REACT_APP_STAGE as string) ||\n// 'development';\nconsole.log(setting[option]);\n\nexport default setting[option];\n","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\organisms\\ProjectGroup.tsx",["287","288","289","290"],"import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Span from '../atoms/Span';\r\nimport Project from './Project';\r\nimport setting from '../../config';\r\n\r\nconst StyledProjectGroup = styled.div`\r\n  top: 119px;\r\n  padding-top: 62px;\r\n`;\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nconst ProjectGroup = (props: any): JSX.Element => {\r\n  const [projects, setProjects] = useState<any>([]);\r\n  // TODO : TRACK_ID를 받을 수 있도록 해야 한다.\r\n  const TRACK_ID = props.match.params.id;\r\n\r\n  const getProjectsOfUser = () => {\r\n    const cookie = localStorage.getItem('token');\r\n    try {\r\n      const url = `/api/user_tracks/${TRACK_ID}`;\r\n      fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          Authorization: cookie || '',\r\n        },\r\n      })\r\n        .then(res => res.json())\r\n        .then(res => setProjects(res.result));\r\n    } catch (error) {\r\n      throw new Error('authCheck error');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProjectsOfUser();\r\n  }, []);\r\n\r\n  return (\r\n    <StyledProjectGroup>\r\n      <Span\r\n        fontSize=\"18pt\"\r\n        lineHeight=\"30px\"\r\n        text=\"PROJECT\"\r\n        letterSpacing=\"-0.72pt\"\r\n        marginRight=\"236px\"\r\n      ></Span>\r\n      <Span\r\n        fontSize=\"18pt\"\r\n        lineHeight=\"30pt\"\r\n        text=\"POST\"\r\n        letterSpacing=\"-0.72pt\"\r\n      ></Span>\r\n\r\n      {projects?.map((project: any, index: number) => (\r\n        <Project\r\n          key={index}\r\n          projectNum={project.pid}\r\n          title={project.ptitle}\r\n          articles={project.child}\r\n          trackUrl={props.match.url}\r\n        ></Project>\r\n      ))}\r\n    </StyledProjectGroup>\r\n  );\r\n};\r\n\r\nexport default ProjectGroup;\r\n","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\unreuse\\Banner.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\organisms\\ProjectBanner.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\unreuse\\About.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\templates\\ArticleContents.tsx",["291","292","293","294"],"import React, { useState, useEffect } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport setting from '../../config';\r\n\r\nconst ArticleContents = (props: any): JSX.Element => {\r\n  const curArticle = props.match.params.article_id;\r\n  const [article, setArticle]: any = useState([]);\r\n\r\n  const getArticle = () => {\r\n    const cookie = localStorage.getItem('token');\r\n    try {\r\n      const url = `/api/articles/${curArticle}`;\r\n      fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          Authorization: cookie || '',\r\n        },\r\n      })\r\n        .then(res => res.json())\r\n        .then(res => setArticle(res.result));\r\n    } catch (error) {\r\n      throw new Error('authCheck error');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getArticle();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div id=\"markdown_title\">\r\n        <ReactMarkdown\r\n          source={\r\n            '# 마크다운으로 쓴 제목입니다. : ' +\r\n            (!article.TITLE ? '' : article.TITLE)\r\n          }\r\n        />\r\n      </div>\r\n      <div id=\"markdown_contents\">\r\n        <ReactMarkdown\r\n          source={\r\n            '### 이것은 마크다운으로 쓴 내용입니다. : ' +\r\n            (!article.CONTENTS ? '' : article.CONTENTS)\r\n          }\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ArticleContents;\r\n","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\templates\\TrackList.tsx",["295","296","297","298","299","300","301","302"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport setting from '../../config';\r\nconst StyledTrackList = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  max-width: 1240px;\r\n  margin: 30px auto;\r\n`;\r\n\r\nconst StyledOneTrack = styled.div`\r\n  width: 300px;\r\n  height: 300px;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  -webkit-box-shadow: 5px 5px 8px 0px rgba(0, 0, 0, 0.4);\r\n  margin: 30px;\r\n`;\r\n\r\nconst TrackCardImg = styled.img`\r\n  width: 300px;\r\n  height: 250px;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst TrackCardTitle = styled.span`\r\n  display: inline-block;\r\n  width: 300px;\r\n  height: 50px;\r\n  font-size: 1.15rem;\r\n  text-align: center;\r\n  line-height: 50px;\r\n`;\r\n\r\nconst TrackList = (props: any): JSX.Element => {\r\n  const [tracks, setTracks] = useState([]);\r\n  const getTracks = async () => {\r\n    const cookie = localStorage.getItem('token');\r\n    try {\r\n      const url = '/api/tracks';\r\n      console.log(url);\r\n      const response = await fetch(url, {\r\n        headers: {\r\n          Authorization: cookie || '',\r\n        },\r\n      });\r\n      console.log('response : ', response);\r\n      const body = await response.json();\r\n      console.log('body : ', body);\r\n      setTracks(body.result);\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTracks();\r\n  }, []);\r\n\r\n  return (\r\n    <StyledTrackList>\r\n      {tracks?.map((track: any, index) => (\r\n        <StyledOneTrack key={index}>\r\n          <Link\r\n            to={`${props.match.url}/${track.ID}`}\r\n            style={{ fontSize: '30px' }}\r\n          >\r\n            <TrackCardImg src=\"/images/tracks.png\"></TrackCardImg>\r\n            <TrackCardTitle>{track.DEPARTMENT}</TrackCardTitle>\r\n          </Link>\r\n        </StyledOneTrack>\r\n      ))}\r\n    </StyledTrackList>\r\n  );\r\n};\r\n\r\nexport default TrackList;\r\n","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\organisms\\Project.tsx",["303","304","305"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ProjectDescription from '../molecules/ProjectDescription';\r\nimport ProjectList from '../molecules/ProjectList';\r\n\r\nconst StyledProject = styled.div<any>`\r\n  display: flex;\r\n  border: 1px solid rgb(246, 246, 246);\r\n  border-radius: 10px;\r\n  box-shadow: 1.2px 2.7px 8px 0px rgba(0, 0, 0, 0.08);\r\n  margin-bottom: 20px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Project = (props: any): JSX.Element => {\r\n  const project_id = props.projectNum;\r\n  const title = props.title;\r\n  const articles = props.articles;\r\n  const trackUrl = props.trackUrl;\r\n\r\n  return (\r\n    <StyledProject>\r\n      <ProjectDescription title={title}></ProjectDescription>\r\n      <ProjectList\r\n        projectNum={project_id}\r\n        articles={articles}\r\n        trackUrl={trackUrl}\r\n      ></ProjectList>\r\n    </StyledProject>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\atoms\\Span.tsx",["306","307","308"],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\molecules\\ProjectDescription.tsx",["309","310","311"],"import React from 'react';\nimport styled from 'styled-components';\nimport P from '../atoms/P';\n\nconst StyledProjectDescription = styled.div`\n  width: 25.2%;\n  min-width: 312px;\n`;\n\nconst ProjectDescription = (props: any) => {\n  const title = props.title;\n  return (\n    <StyledProjectDescription>\n      <P\n        paddingLeft=\"1.5%\"\n        fontSize=\"24px\"\n        lineHeight=\"32px\"\n        letterSpacing=\"-0.96pt\"\n        color=\"rgb(51,51,51)\"\n        text={title}\n      ></P>\n    </StyledProjectDescription>\n  );\n};\n\nexport default ProjectDescription;\n","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\molecules\\ProjectList.tsx",["312","313","314","315","316","317"],"import React from 'react';\nimport Span from '../atoms/Span';\nimport Article from './Article';\nimport Styled from 'styled-components';\n\nconst StyledProjectList = Styled.div`\n  width:74.8%;\n  overflow:hidden;\n  padding-top:16px;\n  padding-bottom:20px;\n  `;\n\nconst ProjectList = (props: any) => {\n  const articles = props.articles;\n  const trackUrl = props.trackUrl;\n\n  return (\n    <StyledProjectList>\n      {articles?.map((article: any, index: any) => (\n        <Article\n          key={index}\n          paddingLeft=\"312px\"\n          paddingBottom=\"20px\"\n          title={article.atitle}\n          articleID={article.aid}\n          trackUrl={trackUrl}\n        ></Article>\n      ))}\n    </StyledProjectList>\n  );\n};\n\nexport default ProjectList;\n","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\atoms\\P.tsx",["318","319","320"],"import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledP = styled.p<any>`\n  position: ${props => props.positon || 'static'};\n  padding-left: ${props => props.paddingLeft};\n  padding-right: ${props => props.paddingRight};\n  padding-top: ${props => props.paddingTop};\n  padding-bottom: ${props => props.paddingBottom};\n  font-size: ${props => props.fontSize};\n  line-height: ${props => props.lineHeight};\n  letter-spacing: ${props => props.letterSpacing};\n  margin-right: ${props => props.marginRight};\n  color: ${props => props.color || 'black'};\n  width: ${props => props.width};\n  height: ${props => props.height};\n`;\n\nconst P = ({ text, ...rest }: any): JSX.Element => {\n  return <StyledP {...rest}>{text}</StyledP>;\n};\n\nexport default P;\n","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\molecules\\Article.tsx",["321","322","323","324"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Button from '../atoms/Button';\nimport Span from '../atoms/Span';\n\nconst StyledArticle = styled.div<any>`\n  key: ${props => props.index};\n  overflow: hidden;\n  margin-right: 20px;\n  border-radius: 5px;\n  margin-bottom: 20px;\n  background-color: rgb(241, 240, 240);\n  text-align: 'left';\n`;\n\nconst Article = (props: any) => {\n  const title = props.title;\n  const articleID = props.articleID;\n  const trackUrl = props.trackUrl;\n\n  return (\n    <StyledArticle>\n      <Link\n        to={`${trackUrl}/articles/${articleID}`}\n        style={{ fontSize: '30px' }}\n      >\n        <Button\n          textAlign=\"left\"\n          height=\"41px\"\n          width=\"100%\"\n          marginBottom=\"0px\"\n          marginTop=\"0px\"\n        >\n          <Span text={title} width=\"100%\"></Span>\n        </Button>\n      </Link>\n    </StyledArticle>\n  );\n};\n\nexport default Article;\n",[],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\molecules\\Callback.tsx",["325","326"],"/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport qs from 'qs';\n\nfunction Callback({ history, location }: any) {\n  useEffect(() => {\n    async function getToken() {\n      const { code } = qs.parse(location.search, {\n        ignoreQueryPrefix: true,\n      });\n\n      try {\n        // 이 부분은 express에 요청하여 JWT 토큰을 발급합니다.\n        const response: any = await axios.post(\n          `http://localhost:4000/api/auth/github`,\n          {\n            code,\n          },\n        );\n        // 유저 JWT 토큰을 저장합니다.\n        localStorage.setItem('token', response.data.access_token);\n        // history.push('/'); // 로그인이 완료되면 보여줄 페이지\n        window.location.href = '/';\n      } catch (error) {\n        history.push('/error'); // api요청이 실패했을때 애러 핸들링 페이지\n      }\n    }\n\n    getToken();\n  }, [location, history]);\n  return <div style={{ border: '1px solid red' }}>잠시만 기다려주세요</div>; // 이 부분에 로딩바와 같은 페이지를 렌더링 해도 좋아요.\n}\n\nexport default Callback;\n",{"ruleId":"327","severity":1,"message":"328","line":6,"column":10,"nodeType":"329","messageId":"330","endLine":6,"endColumn":28},{"ruleId":"327","severity":1,"message":"331","line":59,"column":10,"nodeType":"329","messageId":"330","endLine":59,"endColumn":12},{"ruleId":"327","severity":1,"message":"332","line":60,"column":10,"nodeType":"329","messageId":"330","endLine":60,"endColumn":18},{"ruleId":"333","severity":1,"message":"334","line":71,"column":28,"nodeType":"335","messageId":"336","endLine":71,"endColumn":31,"suggestions":"337"},{"ruleId":"333","severity":1,"message":"334","line":72,"column":34,"nodeType":"335","messageId":"336","endLine":72,"endColumn":37,"suggestions":"338"},{"ruleId":"339","severity":1,"message":"340","line":124,"column":22,"nodeType":"341","messageId":"342","endLine":124,"endColumn":33},{"ruleId":"339","severity":1,"message":"340","line":125,"column":25,"nodeType":"341","messageId":"342","endLine":125,"endColumn":38},{"ruleId":"333","severity":1,"message":"334","line":132,"column":27,"nodeType":"335","messageId":"336","endLine":132,"endColumn":30,"suggestions":"343"},{"ruleId":"344","severity":1,"message":"345","line":15,"column":16,"nodeType":"346","messageId":"347","endLine":15,"endColumn":30},{"ruleId":"333","severity":1,"message":"334","line":15,"column":27,"nodeType":"335","messageId":"336","endLine":15,"endColumn":30,"suggestions":"348"},{"ruleId":"333","severity":1,"message":"334","line":29,"column":14,"nodeType":"335","messageId":"336","endLine":29,"endColumn":17,"suggestions":"349"},{"ruleId":"333","severity":1,"message":"334","line":4,"column":30,"nodeType":"335","messageId":"336","endLine":4,"endColumn":33,"suggestions":"350"},{"ruleId":"344","severity":1,"message":"345","line":11,"column":14,"nodeType":"346","messageId":"347","endLine":11,"endColumn":30},{"ruleId":"333","severity":1,"message":"334","line":11,"column":27,"nodeType":"335","messageId":"336","endLine":11,"endColumn":30,"suggestions":"351"},{"ruleId":"327","severity":1,"message":"352","line":2,"column":8,"nodeType":"329","messageId":"330","endLine":2,"endColumn":14},{"ruleId":"333","severity":1,"message":"334","line":14,"column":30,"nodeType":"335","messageId":"336","endLine":14,"endColumn":33,"suggestions":"353"},{"ruleId":"333","severity":1,"message":"334","line":15,"column":44,"nodeType":"335","messageId":"336","endLine":15,"endColumn":47,"suggestions":"354"},{"ruleId":"333","severity":1,"message":"334","line":54,"column":32,"nodeType":"335","messageId":"336","endLine":54,"endColumn":35,"suggestions":"355"},{"ruleId":"327","severity":1,"message":"352","line":2,"column":8,"nodeType":"329","messageId":"330","endLine":2,"endColumn":14},{"ruleId":"344","severity":1,"message":"356","line":4,"column":26,"nodeType":"329","messageId":"357","endLine":4,"endColumn":36},{"ruleId":"333","severity":1,"message":"334","line":4,"column":33,"nodeType":"335","messageId":"336","endLine":4,"endColumn":36,"suggestions":"358"},{"ruleId":"333","severity":1,"message":"334","line":6,"column":32,"nodeType":"335","messageId":"336","endLine":6,"endColumn":35,"suggestions":"359"},{"ruleId":"344","severity":1,"message":"356","line":18,"column":20,"nodeType":"329","messageId":"357","endLine":18,"endColumn":30},{"ruleId":"333","severity":1,"message":"334","line":18,"column":27,"nodeType":"335","messageId":"336","endLine":18,"endColumn":30,"suggestions":"360"},{"ruleId":"333","severity":1,"message":"334","line":43,"column":28,"nodeType":"335","messageId":"336","endLine":43,"endColumn":31,"suggestions":"361"},{"ruleId":"333","severity":1,"message":"334","line":4,"column":32,"nodeType":"335","messageId":"336","endLine":4,"endColumn":35,"suggestions":"362"},{"ruleId":"344","severity":1,"message":"345","line":19,"column":15,"nodeType":"346","messageId":"347","endLine":19,"endColumn":37},{"ruleId":"333","severity":1,"message":"334","line":19,"column":34,"nodeType":"335","messageId":"336","endLine":19,"endColumn":37,"suggestions":"363"},{"ruleId":"333","severity":1,"message":"334","line":6,"column":34,"nodeType":"335","messageId":"336","endLine":6,"endColumn":37,"suggestions":"364"},{"ruleId":"344","severity":1,"message":"356","line":15,"column":18,"nodeType":"329","messageId":"357","endLine":15,"endColumn":28},{"ruleId":"333","severity":1,"message":"334","line":15,"column":25,"nodeType":"335","messageId":"336","endLine":15,"endColumn":28,"suggestions":"365"},{"ruleId":"327","severity":1,"message":"352","line":2,"column":8,"nodeType":"329","messageId":"330","endLine":2,"endColumn":14},{"ruleId":"344","severity":1,"message":"366","line":5,"column":28,"nodeType":"367","messageId":"368","endLine":5,"endColumn":43},{"ruleId":"344","severity":1,"message":"356","line":5,"column":29,"nodeType":"329","messageId":"357","endLine":5,"endColumn":39},{"ruleId":"333","severity":1,"message":"334","line":5,"column":36,"nodeType":"335","messageId":"336","endLine":5,"endColumn":39,"suggestions":"369"},{"ruleId":"327","severity":1,"message":"370","line":2,"column":8,"nodeType":"329","messageId":"330","endLine":2,"endColumn":12},{"ruleId":"344","severity":1,"message":"366","line":5,"column":21,"nodeType":"367","messageId":"368","endLine":5,"endColumn":36},{"ruleId":"344","severity":1,"message":"356","line":5,"column":22,"nodeType":"329","messageId":"357","endLine":5,"endColumn":32},{"ruleId":"333","severity":1,"message":"334","line":5,"column":29,"nodeType":"335","messageId":"336","endLine":5,"endColumn":32,"suggestions":"371"},{"ruleId":"333","severity":1,"message":"334","line":11,"column":32,"nodeType":"335","messageId":"336","endLine":11,"endColumn":35,"suggestions":"372"},{"ruleId":"333","severity":1,"message":"334","line":11,"column":44,"nodeType":"335","messageId":"336","endLine":11,"endColumn":47,"suggestions":"373"},{"ruleId":"333","severity":1,"message":"334","line":7,"column":34,"nodeType":"335","messageId":"336","endLine":7,"endColumn":37,"suggestions":"374"},{"ruleId":"344","severity":1,"message":"366","line":13,"column":17,"nodeType":"367","messageId":"368","endLine":13,"endColumn":32},{"ruleId":"344","severity":1,"message":"356","line":13,"column":18,"nodeType":"329","messageId":"357","endLine":13,"endColumn":28},{"ruleId":"333","severity":1,"message":"334","line":13,"column":25,"nodeType":"335","messageId":"336","endLine":13,"endColumn":28,"suggestions":"375"},{"ruleId":"327","severity":1,"message":"376","line":2,"column":35,"nodeType":"329","messageId":"330","endLine":2,"endColumn":40},{"ruleId":"339","severity":1,"message":"340","line":56,"column":3,"nodeType":"341","messageId":"342","endLine":56,"endColumn":14},{"ruleId":"327","severity":1,"message":"377","line":3,"column":10,"nodeType":"329","messageId":"330","endLine":3,"endColumn":14},{"ruleId":"327","severity":1,"message":"376","line":3,"column":16,"nodeType":"329","messageId":"330","endLine":3,"endColumn":21},{"ruleId":"344","severity":1,"message":"356","line":5,"column":27,"nodeType":"329","messageId":"357","endLine":5,"endColumn":37},{"ruleId":"333","severity":1,"message":"334","line":5,"column":34,"nodeType":"335","messageId":"336","endLine":5,"endColumn":37,"suggestions":"378"},{"ruleId":"327","severity":1,"message":"379","line":13,"column":20,"nodeType":"329","messageId":"330","endLine":13,"endColumn":32},{"ruleId":"339","severity":1,"message":"340","line":22,"column":3,"nodeType":"341","messageId":"342","endLine":22,"endColumn":14},{"ruleId":"333","severity":1,"message":"334","line":68,"column":28,"nodeType":"335","messageId":"336","endLine":68,"endColumn":31,"suggestions":"380"},{"ruleId":"333","severity":1,"message":"334","line":69,"column":34,"nodeType":"335","messageId":"336","endLine":69,"endColumn":37,"suggestions":"381"},{"ruleId":"333","severity":1,"message":"334","line":114,"column":27,"nodeType":"335","messageId":"336","endLine":114,"endColumn":30,"suggestions":"382"},{"ruleId":"344","severity":1,"message":"345","line":21,"column":16,"nodeType":"346","messageId":"347","endLine":21,"endColumn":30},{"ruleId":"333","severity":1,"message":"334","line":21,"column":27,"nodeType":"335","messageId":"336","endLine":21,"endColumn":30,"suggestions":"383"},{"ruleId":"333","severity":1,"message":"334","line":5,"column":16,"nodeType":"335","messageId":"336","endLine":5,"endColumn":19,"suggestions":"384"},{"ruleId":"339","severity":1,"message":"340","line":17,"column":1,"nodeType":"341","messageId":"342","endLine":17,"endColumn":12},{"ruleId":"339","severity":1,"message":"340","line":22,"column":1,"nodeType":"341","messageId":"342","endLine":22,"endColumn":12},{"ruleId":"327","severity":1,"message":"385","line":5,"column":8,"nodeType":"329","messageId":"330","endLine":5,"endColumn":15},{"ruleId":"333","severity":1,"message":"334","line":13,"column":30,"nodeType":"335","messageId":"336","endLine":13,"endColumn":33,"suggestions":"386"},{"ruleId":"333","severity":1,"message":"334","line":14,"column":44,"nodeType":"335","messageId":"336","endLine":14,"endColumn":47,"suggestions":"387"},{"ruleId":"333","severity":1,"message":"334","line":55,"column":32,"nodeType":"335","messageId":"336","endLine":55,"endColumn":35,"suggestions":"388"},{"ruleId":"327","severity":1,"message":"385","line":3,"column":8,"nodeType":"329","messageId":"330","endLine":3,"endColumn":15},{"ruleId":"344","severity":1,"message":"356","line":5,"column":26,"nodeType":"329","messageId":"357","endLine":5,"endColumn":36},{"ruleId":"333","severity":1,"message":"334","line":5,"column":33,"nodeType":"335","messageId":"336","endLine":5,"endColumn":36,"suggestions":"389"},{"ruleId":"333","severity":1,"message":"334","line":7,"column":32,"nodeType":"335","messageId":"336","endLine":7,"endColumn":35,"suggestions":"390"},{"ruleId":"327","severity":1,"message":"385","line":4,"column":8,"nodeType":"329","messageId":"330","endLine":4,"endColumn":15},{"ruleId":"344","severity":1,"message":"356","line":36,"column":20,"nodeType":"329","messageId":"357","endLine":36,"endColumn":30},{"ruleId":"333","severity":1,"message":"334","line":36,"column":27,"nodeType":"335","messageId":"336","endLine":36,"endColumn":30,"suggestions":"391"},{"ruleId":"339","severity":1,"message":"340","line":42,"column":7,"nodeType":"341","messageId":"342","endLine":42,"endColumn":18},{"ruleId":"339","severity":1,"message":"340","line":48,"column":7,"nodeType":"341","messageId":"342","endLine":48,"endColumn":18},{"ruleId":"339","severity":1,"message":"340","line":50,"column":7,"nodeType":"341","messageId":"342","endLine":50,"endColumn":18},{"ruleId":"339","severity":1,"message":"340","line":53,"column":7,"nodeType":"341","messageId":"342","endLine":53,"endColumn":18},{"ruleId":"333","severity":1,"message":"334","line":64,"column":28,"nodeType":"335","messageId":"336","endLine":64,"endColumn":31,"suggestions":"392"},{"ruleId":"333","severity":1,"message":"334","line":6,"column":34,"nodeType":"335","messageId":"336","endLine":6,"endColumn":37,"suggestions":"393"},{"ruleId":"344","severity":1,"message":"356","line":15,"column":18,"nodeType":"329","messageId":"357","endLine":15,"endColumn":28},{"ruleId":"333","severity":1,"message":"334","line":15,"column":25,"nodeType":"335","messageId":"336","endLine":15,"endColumn":28,"suggestions":"394"},{"ruleId":"333","severity":1,"message":"334","line":4,"column":32,"nodeType":"335","messageId":"336","endLine":4,"endColumn":35,"suggestions":"395"},{"ruleId":"344","severity":1,"message":"345","line":19,"column":15,"nodeType":"346","messageId":"347","endLine":19,"endColumn":37},{"ruleId":"333","severity":1,"message":"334","line":19,"column":34,"nodeType":"335","messageId":"336","endLine":19,"endColumn":37,"suggestions":"396"},{"ruleId":"344","severity":1,"message":"366","line":10,"column":28,"nodeType":"367","messageId":"368","endLine":10,"endColumn":43},{"ruleId":"344","severity":1,"message":"356","line":10,"column":29,"nodeType":"329","messageId":"357","endLine":10,"endColumn":39},{"ruleId":"333","severity":1,"message":"334","line":10,"column":36,"nodeType":"335","messageId":"336","endLine":10,"endColumn":39,"suggestions":"397"},{"ruleId":"327","severity":1,"message":"370","line":2,"column":8,"nodeType":"329","messageId":"330","endLine":2,"endColumn":12},{"ruleId":"344","severity":1,"message":"366","line":13,"column":21,"nodeType":"367","messageId":"368","endLine":13,"endColumn":36},{"ruleId":"344","severity":1,"message":"356","line":13,"column":22,"nodeType":"329","messageId":"357","endLine":13,"endColumn":32},{"ruleId":"333","severity":1,"message":"334","line":13,"column":29,"nodeType":"335","messageId":"336","endLine":13,"endColumn":32,"suggestions":"398"},{"ruleId":"333","severity":1,"message":"334","line":19,"column":32,"nodeType":"335","messageId":"336","endLine":19,"endColumn":35,"suggestions":"399"},{"ruleId":"333","severity":1,"message":"334","line":19,"column":44,"nodeType":"335","messageId":"336","endLine":19,"endColumn":47,"suggestions":"400"},{"ruleId":"333","severity":1,"message":"334","line":4,"column":26,"nodeType":"335","messageId":"336","endLine":4,"endColumn":29,"suggestions":"401"},{"ruleId":"344","severity":1,"message":"345","line":19,"column":12,"nodeType":"346","messageId":"347","endLine":19,"endColumn":34},{"ruleId":"333","severity":1,"message":"334","line":19,"column":31,"nodeType":"335","messageId":"336","endLine":19,"endColumn":34,"suggestions":"402"},{"ruleId":"333","severity":1,"message":"334","line":7,"column":34,"nodeType":"335","messageId":"336","endLine":7,"endColumn":37,"suggestions":"403"},{"ruleId":"344","severity":1,"message":"366","line":17,"column":17,"nodeType":"367","messageId":"368","endLine":17,"endColumn":32},{"ruleId":"344","severity":1,"message":"356","line":17,"column":18,"nodeType":"329","messageId":"357","endLine":17,"endColumn":28},{"ruleId":"333","severity":1,"message":"334","line":17,"column":25,"nodeType":"335","messageId":"336","endLine":17,"endColumn":28,"suggestions":"404"},{"ruleId":"344","severity":1,"message":"366","line":6,"column":1,"nodeType":"405","messageId":"368","endLine":6,"endColumn":46},{"ruleId":"344","severity":1,"message":"345","line":6,"column":19,"nodeType":"346","messageId":"347","endLine":6,"endColumn":45},"@typescript-eslint/no-unused-vars","'Http2ServerRequest' is defined but never used.","Identifier","unusedVar","'id' is assigned a value but never used.","'password' is assigned a value but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["406","407"],["408","409"],"no-console","Unexpected console statement.","MemberExpression","unexpected",["410","411"],"@typescript-eslint/explicit-module-boundary-types","Object pattern argument should be typed with a non-any type.","ObjectPattern","anyTypedArgUnnamed",["412","413"],["414","415"],["416","417"],["418","419"],"'styled' is defined but never used.",["420","421"],["422","423"],["424","425"],"Argument 'props' should be typed with a non-any type.","anyTypedArg",["426","427"],["428","429"],["430","431"],["432","433"],["434","435"],["436","437"],["438","439"],["440","441"],"Missing return type on function.","ArrowFunctionExpression","missingReturnType",["442","443"],"'Span' is defined but never used.",["444","445"],["446","447"],["448","449"],["450","451"],["452","453"],"'Route' is defined but never used.","'Link' is defined but never used.",["454","455"],"'name' is defined but never used.",["456","457"],["458","459"],["460","461"],["462","463"],["464","465"],"'setting' is defined but never used.",["466","467"],["468","469"],["470","471"],["472","473"],["474","475"],["476","477"],["478","479"],["480","481"],["482","483"],["484","485"],["486","487"],["488","489"],["490","491"],["492","493"],["494","495"],["496","497"],["498","499"],["500","501"],["502","503"],"FunctionDeclaration",{"messageId":"504","fix":"505","desc":"506"},{"messageId":"507","fix":"508","desc":"509"},{"messageId":"504","fix":"510","desc":"506"},{"messageId":"507","fix":"511","desc":"509"},{"messageId":"504","fix":"512","desc":"506"},{"messageId":"507","fix":"513","desc":"509"},{"messageId":"504","fix":"514","desc":"506"},{"messageId":"507","fix":"515","desc":"509"},{"messageId":"504","fix":"516","desc":"506"},{"messageId":"507","fix":"517","desc":"509"},{"messageId":"504","fix":"518","desc":"506"},{"messageId":"507","fix":"519","desc":"509"},{"messageId":"504","fix":"520","desc":"506"},{"messageId":"507","fix":"521","desc":"509"},{"messageId":"504","fix":"522","desc":"506"},{"messageId":"507","fix":"523","desc":"509"},{"messageId":"504","fix":"524","desc":"506"},{"messageId":"507","fix":"525","desc":"509"},{"messageId":"504","fix":"526","desc":"506"},{"messageId":"507","fix":"527","desc":"509"},{"messageId":"504","fix":"528","desc":"506"},{"messageId":"507","fix":"529","desc":"509"},{"messageId":"504","fix":"530","desc":"506"},{"messageId":"507","fix":"531","desc":"509"},{"messageId":"504","fix":"532","desc":"506"},{"messageId":"507","fix":"533","desc":"509"},{"messageId":"504","fix":"534","desc":"506"},{"messageId":"507","fix":"535","desc":"509"},{"messageId":"504","fix":"536","desc":"506"},{"messageId":"507","fix":"537","desc":"509"},{"messageId":"504","fix":"538","desc":"506"},{"messageId":"507","fix":"539","desc":"509"},{"messageId":"504","fix":"540","desc":"506"},{"messageId":"507","fix":"541","desc":"509"},{"messageId":"504","fix":"542","desc":"506"},{"messageId":"507","fix":"543","desc":"509"},{"messageId":"504","fix":"544","desc":"506"},{"messageId":"507","fix":"545","desc":"509"},{"messageId":"504","fix":"546","desc":"506"},{"messageId":"507","fix":"547","desc":"509"},{"messageId":"504","fix":"548","desc":"506"},{"messageId":"507","fix":"549","desc":"509"},{"messageId":"504","fix":"550","desc":"506"},{"messageId":"507","fix":"551","desc":"509"},{"messageId":"504","fix":"552","desc":"506"},{"messageId":"507","fix":"553","desc":"509"},{"messageId":"504","fix":"554","desc":"506"},{"messageId":"507","fix":"555","desc":"509"},{"messageId":"504","fix":"556","desc":"506"},{"messageId":"507","fix":"557","desc":"509"},{"messageId":"504","fix":"558","desc":"506"},{"messageId":"507","fix":"559","desc":"509"},{"messageId":"504","fix":"560","desc":"506"},{"messageId":"507","fix":"561","desc":"509"},{"messageId":"504","fix":"562","desc":"506"},{"messageId":"507","fix":"563","desc":"509"},{"messageId":"504","fix":"564","desc":"506"},{"messageId":"507","fix":"565","desc":"509"},{"messageId":"504","fix":"566","desc":"506"},{"messageId":"507","fix":"567","desc":"509"},{"messageId":"504","fix":"568","desc":"506"},{"messageId":"507","fix":"569","desc":"509"},{"messageId":"504","fix":"570","desc":"506"},{"messageId":"507","fix":"571","desc":"509"},{"messageId":"504","fix":"572","desc":"506"},{"messageId":"507","fix":"573","desc":"509"},{"messageId":"504","fix":"574","desc":"506"},{"messageId":"507","fix":"575","desc":"509"},{"messageId":"504","fix":"576","desc":"506"},{"messageId":"507","fix":"577","desc":"509"},{"messageId":"504","fix":"578","desc":"506"},{"messageId":"507","fix":"579","desc":"509"},{"messageId":"504","fix":"580","desc":"506"},{"messageId":"507","fix":"581","desc":"509"},{"messageId":"504","fix":"582","desc":"506"},{"messageId":"507","fix":"583","desc":"509"},{"messageId":"504","fix":"584","desc":"506"},{"messageId":"507","fix":"585","desc":"509"},{"messageId":"504","fix":"586","desc":"506"},{"messageId":"507","fix":"587","desc":"509"},{"messageId":"504","fix":"588","desc":"506"},{"messageId":"507","fix":"589","desc":"509"},{"messageId":"504","fix":"590","desc":"506"},{"messageId":"507","fix":"591","desc":"509"},{"messageId":"504","fix":"592","desc":"506"},{"messageId":"507","fix":"593","desc":"509"},{"messageId":"504","fix":"594","desc":"506"},{"messageId":"507","fix":"595","desc":"509"},{"messageId":"504","fix":"596","desc":"506"},{"messageId":"507","fix":"597","desc":"509"},{"messageId":"504","fix":"598","desc":"506"},{"messageId":"507","fix":"599","desc":"509"},{"messageId":"504","fix":"600","desc":"506"},{"messageId":"507","fix":"601","desc":"509"},{"messageId":"504","fix":"602","desc":"506"},{"messageId":"507","fix":"603","desc":"509"},{"messageId":"504","fix":"604","desc":"506"},{"messageId":"507","fix":"605","desc":"509"},"suggestUnknown",{"range":"606","text":"607"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"606","text":"608"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"609","text":"607"},{"range":"609","text":"608"},{"range":"610","text":"607"},{"range":"610","text":"608"},{"range":"611","text":"607"},{"range":"611","text":"608"},{"range":"612","text":"607"},{"range":"612","text":"608"},{"range":"613","text":"607"},{"range":"613","text":"608"},{"range":"614","text":"607"},{"range":"614","text":"608"},{"range":"615","text":"607"},{"range":"615","text":"608"},{"range":"616","text":"607"},{"range":"616","text":"608"},{"range":"617","text":"607"},{"range":"617","text":"608"},{"range":"618","text":"607"},{"range":"618","text":"608"},{"range":"619","text":"607"},{"range":"619","text":"608"},{"range":"620","text":"607"},{"range":"620","text":"608"},{"range":"621","text":"607"},{"range":"621","text":"608"},{"range":"622","text":"607"},{"range":"622","text":"608"},{"range":"623","text":"607"},{"range":"623","text":"608"},{"range":"624","text":"607"},{"range":"624","text":"608"},{"range":"625","text":"607"},{"range":"625","text":"608"},{"range":"626","text":"607"},{"range":"626","text":"608"},{"range":"627","text":"607"},{"range":"627","text":"608"},{"range":"628","text":"607"},{"range":"628","text":"608"},{"range":"629","text":"607"},{"range":"629","text":"608"},{"range":"630","text":"607"},{"range":"630","text":"608"},{"range":"631","text":"607"},{"range":"631","text":"608"},{"range":"632","text":"607"},{"range":"632","text":"608"},{"range":"633","text":"607"},{"range":"633","text":"608"},{"range":"634","text":"607"},{"range":"634","text":"608"},{"range":"635","text":"607"},{"range":"635","text":"608"},{"range":"636","text":"607"},{"range":"636","text":"608"},{"range":"637","text":"607"},{"range":"637","text":"608"},{"range":"638","text":"607"},{"range":"638","text":"608"},{"range":"639","text":"607"},{"range":"639","text":"608"},{"range":"640","text":"607"},{"range":"640","text":"608"},{"range":"641","text":"607"},{"range":"641","text":"608"},{"range":"642","text":"607"},{"range":"642","text":"608"},{"range":"643","text":"607"},{"range":"643","text":"608"},{"range":"644","text":"607"},{"range":"644","text":"608"},{"range":"645","text":"607"},{"range":"645","text":"608"},{"range":"646","text":"607"},{"range":"646","text":"608"},{"range":"647","text":"607"},{"range":"647","text":"608"},{"range":"648","text":"607"},{"range":"648","text":"608"},{"range":"649","text":"607"},{"range":"649","text":"608"},{"range":"650","text":"607"},{"range":"650","text":"608"},{"range":"651","text":"607"},{"range":"651","text":"608"},{"range":"652","text":"607"},{"range":"652","text":"608"},{"range":"653","text":"607"},{"range":"653","text":"608"},{"range":"654","text":"607"},{"range":"654","text":"608"},{"range":"655","text":"607"},{"range":"655","text":"608"},{"range":"656","text":"607"},{"range":"656","text":"608"},[1770,1773],"unknown","never",[1838,1841],[3843,3846],[440,443],[681,684],[97,100],[282,285],[405,408],[472,475],[1449,1452],[128,131],[236,239],[445,448],[1054,1057],[99,102],[684,687],[224,227],[440,443],[137,140],[123,126],[282,285],[294,297],[214,217],[327,330],[151,154],[1688,1691],[1756,1759],[2979,2982],[571,574],[110,113],[393,396],[460,463],[1427,1430],[169,172],[277,280],[798,801],[1515,1518],[224,227],[445,448],[99,102],[684,687],[216,219],[284,287],[431,434],[443,446],[93,96],[675,678],[214,217],[429,432]]