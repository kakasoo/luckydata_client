[{"C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\index.tsx":"1","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\reportWebVitals.ts":"2","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\App.tsx":"3","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\molecules\\Header.tsx":"4","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\pages\\Main.tsx":"5","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\unreuse\\Store.tsx":"6","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\molecules\\LoginButtonGroup.tsx":"7","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\organisms\\Modal.tsx":"8","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\pages\\Home.tsx":"9","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\pages\\Track.tsx":"10","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\atoms\\Button.tsx":"11","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\atoms\\Img.tsx":"12","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\unreuse\\Banner.tsx":"13","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\organisms\\ProjectGroup.tsx":"14","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\organisms\\ProjectBanner.tsx":"15","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\templates\\ArticleContents.tsx":"16","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\templates\\TrackList.tsx":"17","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\atoms\\Span.tsx":"18","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\organisms\\Project.tsx":"19","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\molecules\\ProjectDescription.tsx":"20","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\molecules\\ProjectList.tsx":"21","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\molecules\\Article.tsx":"22","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\index.tsx":"23","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\reportWebVitals.ts":"24","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\App.tsx":"25","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\molecules\\Header.tsx":"26","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\molecules\\LoginButtonGroup.tsx":"27","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\molecules\\Footer.tsx":"28","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\organisms\\Modal.tsx":"29","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\unreuse\\Store.tsx":"30","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\pages\\Main.tsx":"31","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\pages\\Home.tsx":"32","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\pages\\Track.tsx":"33","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\atoms\\Button.tsx":"34","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\config\\index.ts":"35","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\organisms\\ProjectGroup.tsx":"36","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\unreuse\\Banner.tsx":"37","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\organisms\\ProjectBanner.tsx":"38","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\unreuse\\About.tsx":"39","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\templates\\TrackList.tsx":"40","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\organisms\\Project.tsx":"41","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\atoms\\Span.tsx":"42","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\molecules\\ProjectDescription.tsx":"43","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\molecules\\ProjectList.tsx":"44","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\atoms\\P.tsx":"45","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\molecules\\Article.tsx":"46","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\molecules\\Callback.tsx":"47","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\interfaces\\index.ts":"48","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\organisms\\LoadingScreen.tsx":"49","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\organisms\\NoData.tsx":"50","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\pages\\ArticleContents.tsx":"51"},{"size":271,"mtime":1611212795043,"results":"52","hashOfConfig":"53"},{"size":431,"mtime":1610435047890,"results":"54","hashOfConfig":"53"},{"size":1421,"mtime":1613035087838,"results":"55","hashOfConfig":"53"},{"size":1623,"mtime":1613035087841,"results":"56","hashOfConfig":"53"},{"size":325,"mtime":1612585691697,"results":"57","hashOfConfig":"53"},{"size":559,"mtime":1610441037781,"results":"58","hashOfConfig":"53"},{"size":1068,"mtime":1613436044361,"results":"59","hashOfConfig":"53"},{"size":5662,"mtime":1613464167486,"results":"60","hashOfConfig":"53"},{"size":1523,"mtime":1613035087843,"results":"61","hashOfConfig":"53"},{"size":905,"mtime":1612586714939,"results":"62","hashOfConfig":"53"},{"size":1015,"mtime":1613035087839,"results":"63","hashOfConfig":"53"},{"size":373,"mtime":1612512087756,"results":"64","hashOfConfig":"53"},{"size":963,"mtime":1613035087844,"results":"65","hashOfConfig":"53"},{"size":1783,"mtime":1613033768490,"results":"66","hashOfConfig":"53"},{"size":349,"mtime":1613035087842,"results":"67","hashOfConfig":"53"},{"size":920,"mtime":1613033768491,"results":"68","hashOfConfig":"53"},{"size":1489,"mtime":1613111742695,"results":"69","hashOfConfig":"53"},{"size":784,"mtime":1612584884634,"results":"70","hashOfConfig":"53"},{"size":897,"mtime":1613033768489,"results":"71","hashOfConfig":"53"},{"size":734,"mtime":1612513477517,"results":"72","hashOfConfig":"53"},{"size":579,"mtime":1612586807086,"results":"73","hashOfConfig":"53"},{"size":742,"mtime":1612618129191,"results":"74","hashOfConfig":"53"},{"size":271,"mtime":1611212795043,"results":"75","hashOfConfig":"76"},{"size":431,"mtime":1610435047890,"results":"77","hashOfConfig":"76"},{"size":1498,"mtime":1614145946097,"results":"78","hashOfConfig":"76"},{"size":2124,"mtime":1614253212244,"results":"79","hashOfConfig":"76"},{"size":1180,"mtime":1614145138488,"results":"80","hashOfConfig":"76"},{"size":1908,"mtime":1613801037477,"results":"81","hashOfConfig":"76"},{"size":5284,"mtime":1614147146599,"results":"82","hashOfConfig":"76"},{"size":559,"mtime":1614142071755,"results":"83","hashOfConfig":"76"},{"size":437,"mtime":1614169757972,"results":"84","hashOfConfig":"76"},{"size":402,"mtime":1614065099394,"results":"85","hashOfConfig":"76"},{"size":1236,"mtime":1614251588074,"results":"86","hashOfConfig":"76"},{"size":1226,"mtime":1614143662203,"results":"87","hashOfConfig":"76"},{"size":1054,"mtime":1614240499426,"results":"88","hashOfConfig":"76"},{"size":2120,"mtime":1614246443980,"results":"89","hashOfConfig":"76"},{"size":1583,"mtime":1614055407678,"results":"90","hashOfConfig":"76"},{"size":850,"mtime":1614142034750,"results":"91","hashOfConfig":"76"},{"size":2128,"mtime":1614172050127,"results":"92","hashOfConfig":"76"},{"size":2391,"mtime":1614245019991,"results":"93","hashOfConfig":"76"},{"size":913,"mtime":1614246657981,"results":"94","hashOfConfig":"76"},{"size":1015,"mtime":1614246300145,"results":"95","hashOfConfig":"76"},{"size":817,"mtime":1614246051186,"results":"96","hashOfConfig":"76"},{"size":857,"mtime":1614174480904,"results":"97","hashOfConfig":"76"},{"size":953,"mtime":1614245926648,"results":"98","hashOfConfig":"76"},{"size":1179,"mtime":1614246578778,"results":"99","hashOfConfig":"76"},{"size":917,"mtime":1614146530179,"results":"100","hashOfConfig":"76"},{"size":1570,"mtime":1614174449383,"results":"101","hashOfConfig":"76"},{"size":716,"mtime":1614245271815,"results":"102","hashOfConfig":"76"},{"size":262,"mtime":1614244647482,"results":"103","hashOfConfig":"76"},{"size":2812,"mtime":1614253489171,"results":"104","hashOfConfig":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},"1mygvkc",{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"107"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"107"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"107"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"107"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"107"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"107"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"107"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"107"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"107"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"107"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"107"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"107"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},"7qho7m",{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"165"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"165"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"165"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\index.tsx",[],[],"C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\reportWebVitals.ts",[],"C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\App.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\molecules\\Header.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\pages\\Main.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\unreuse\\Store.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\molecules\\LoginButtonGroup.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\organisms\\Modal.tsx",["226","227","228","229","230","231","232","233"],"import React, { useContext, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport dotenv from 'dotenv';\nimport { LoginContext } from '../../App';\nimport axios from 'axios';\nimport { Http2ServerRequest } from 'http2';\ndotenv.config();\n\nconst ModalWrapper = styled.div`\n  id: ${props => props.id};\n  box-sizing: border-box;\n  display: ${visible => (visible ? 'block' : 'none')};\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1000;\n  overflow: auto;\n  outline: 0;\n  onclick: ${props => props.onclick};\n`;\n\nconst ModalOverlay = styled.div`\n  box-sizing: border-box;\n  color: ${({ color }) => color || 'white'};\n  display: ${({ visible }) => (visible ? 'block' : 'none')};\n  position: fixed;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.6);\n  z-index: 999;\n`;\n\nconst ModalInner = styled.div`\n  box-sizing: border-box;\n  position: relative;\n  box-shadow: 0 0 6px 0 rgba(0, 0, 0, 0.5);\n  background-color: #fff;\n  border-radius: 10px;\n  width: 360px;\n  max-width: 480px;\n  top: 50%;\n  transform: translateY(-50%);\n  margin: 0 auto;\n  padding: 40px 20px;\n`;\n\ntype modalProps = {\n  className?: string;\n  visible?: boolean;\n  children?: JSX.Element;\n};\n\nconst Modal = ({ className, visible, children }: modalProps): JSX.Element => {\n  const { state, onclick } = useContext(LoginContext);\n  const [id, setID] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [message, setMessage] = useState('정보를 입력 후 로그인을 눌려주세요.');\n  const [messageColor, setMEssageColor] = useState('red');\n\n  useEffect(() => {\n    if (localStorage.getItem('cookie')) {\n      setMessage('이미 로그인에 성공한 유저입니다.');\n      setMEssageColor('blue');\n    }\n  }, [state]);\n\n  const changeID = (event: any) => setID(event.target.value);\n  const changePassword = (event: any) => setPassword(event.target.value);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const clickOutside = ({ target }: any) => {\n    if (state && document.getElementById('modalBackground') === target) {\n      onclick();\n    }\n  };\n\n  const login = () => {\n    const url = process.env.REACT_APP_SERVER_ADDRESS + '/auth/local';\n    // const url = process.env.REACT_APP_DEVELOP_SERVER + '/auth/local';\n    try {\n      // fetch(url, {\n      //   method: 'POST',\n      //   headers: {\n      //     'Content-Type': 'application/json',\n      //     'Access-Control-Allow-Origin': '*',\n      //     'Access-Control-Allow-Methods': '*',\n      //     'Access-Control-Max-Age': '3600',\n      //     'Access-Control-Allow-Headers':\n      //       'Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers, Authorization',\n      //   },\n      //   credentials: 'same-origin',\n      //   body: JSON.stringify({\n      //     USER_ID: id,\n      //     PASSWORD: password,\n      //   }),\n      // })\n      //   .then(res => {\n      //     console.log('res1 : ', res);\n      //     return res.json();\n      //   })\n      //   .then(res => {\n      //     console.log('res2 : ', res);\n      //     if (res.message === 'success') {\n      //       localStorage.setItem('cookie', res.result);\n      //       setMessage('이미 로그인에 성공한 유저입니다.');\n      //       setMEssageColor('blue');\n      //       onclick();\n      //       window.location.href = String(\n      //         process.env.REACT_APP_CLIENT_ROOT_ADDRESS,\n      //       );\n      //     } else {\n      //       setMessage('아이디와 비밀번호를 다시 확인해주세요.');\n      //       setMEssageColor('red');\n      //       return;\n      //     }\n      //   });\n\n      axios\n        .get(url)\n        .then(res => console.log(res))\n        .catch(error => console.error(error));\n    } catch (error) {\n      setMessage('알 수 없는 이유로 로그인에 실패하였습니다.');\n      setMEssageColor('red');\n    }\n  };\n\n  const isEnter = (event: any) => event.charCode === 13 && login();\n  return (\n    <ModalOverlay visible={visible}>\n      <ModalWrapper\n        id={'modalBackground'}\n        className={className}\n        tabIndex={-1}\n        visible={visible}\n        onClick={clickOutside}\n      >\n        <ModalInner tabIndex={0} className=\"modalInner\">\n          <h1 style={{ color: 'black', margin: '0px', marginBottom: '5px' }}>\n            Login\n          </h1>\n          <input\n            placeholder=\"아이디를 입력해주세요.\"\n            style={{ width: '100%', height: '30px', marginBottom: '5px' }}\n            id=\"user_id\"\n            name=\"user_id\"\n            // value=\"201634101\"\n            onChange={changeID}\n          ></input>\n          <input\n            type=\"password\"\n            placeholder=\"비밀번호를 입력해주세요.\"\n            style={{ width: '100%', height: '30px', marginBottom: '5px' }}\n            id=\"password\"\n            name=\"password\"\n            // value=\"kakasoo\"\n            onChange={changePassword}\n            onKeyPress={isEnter}\n          ></input>\n          <button\n            style={{ width: '100%', height: '30px', marginBottom: '5px' }}\n            id=\"login_button\"\n            onClick={login}\n          >\n            login\n          </button>\n          {/* <button onClick={authCheck}> auth check </button> */}\n          <span\n            style={{\n              color: messageColor,\n              fontSize: '12px',\n              fontWeight: 'bold',\n            }}\n          >\n            {message}\n          </span>\n          {children}\n        </ModalInner>\n      </ModalWrapper>\n    </ModalOverlay>\n  );\n};\n\nexport default Modal;\n","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\pages\\Home.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\pages\\Track.tsx",["234","235"],"import React from 'react';\nimport { Route } from 'react-router-dom';\nimport styled from 'styled-components';\nimport ProjectBanner from '../organisms/ProjectBanner';\nimport ProjectGroup from '../organisms/ProjectGroup';\nimport TrackList from '../templates/TrackList';\nimport ArticleContents from '../templates/ArticleContents';\n\nconst StyledTrack = styled.div`\n  position: absolute;\n  width: 100%;\n  top: 60px;\n`;\n\nconst Track = ({ match }: any): JSX.Element => {\n  return (\n    <StyledTrack>\n      <ProjectBanner />\n      <>\n        <Route exact path={match.path} component={TrackList}></Route>\n        <Route\n          exact\n          path={`${match.path}/:id`}\n          component={ProjectGroup}\n        ></Route>\n        <Route\n          path={`${match.path}/:id/articles/:article_id`}\n          component={ArticleContents}\n        ></Route>\n      </>\n    </StyledTrack>\n  );\n};\n\nexport default Track;\n","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\atoms\\Button.tsx",["236"],"import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledButton = styled.button`\r\n  display: inline-flex;\r\n\toutline: none;\r\n\tborder:transparent;\r\n  color: ${props => props.color || 'white'};\r\n  cursor: pointer;\r\n  padding-left: 1rem;\r\n  padding-right: 1rem;\r\n  padding-top: 5px;\r\n\r\n  width: ${props => props.width || '100px'};\r\n  border-radius: ${props => (props.radius ? '10px' : '0px')};\r\n\r\n\theight: 2.25rem;\r\n  font-size: 1.1rem;\r\n  background: ${props => props.background || 'transparent'};\r\n  margin-top: 20px;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  onclick: ${props => props.onclick};\r\n  }\r\n`;\r\n\r\ntype ButtonType = {\r\n  children?: any;\r\n  radius?: boolean;\r\n  color?: string;\r\n  width?: string;\r\n  onclick?: () => void;\r\n  background?: string;\r\n};\r\n\r\nconst Button = ({ onclick, children, ...rest }: ButtonType): JSX.Element => {\r\n  return (\r\n    <StyledButton onClick={onclick} {...rest}>\r\n      {children}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\atoms\\Img.tsx",["237","238","239"],"import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledImg = styled.img<any>`\n  src: ${props => props.src};\n  overflow: hidden;\n  height: ${props => props.height || '100%'};\n  margin-top: ${props => props.marginTop || '10px'};\n`;\n\nconst Img = ({ ...rest }: any): JSX.Element => {\n  return <StyledImg {...rest}></StyledImg>;\n};\n\nexport default Img;\n","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\unreuse\\Banner.tsx",["240"],"import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Banner = (): JSX.Element => {\r\n  return (\r\n    <>\r\n      <div style={{ height: '60px' }}></div>\r\n      <img src=\"/images/main_img.jpg\"></img>\r\n      <img\r\n        style={{\r\n          position: 'absolute',\r\n          top: 'calc(17.5% + 60px)',\r\n          left: '17.7%',\r\n        }}\r\n        src=\"/images/main_luckydata.png\"\r\n      ></img>\r\n      <div\r\n        style={{\r\n          position: 'absolute',\r\n          left: '18.8%',\r\n          top: 'calc(35.1% + 60px)',\r\n          color: 'white',\r\n        }}\r\n      >\r\n        <p style={{ margin: '0px' }}>운수대통에서 비롯된 말로</p>\r\n        <p style={{ margin: '0px' }}>대자를 데이터의 데자로 바꾼 말이다</p>\r\n        <p style={{ margin: '0px' }}>\r\n          운수가 좋은 날에는 데이터 분석이 잘 될 거라는 의미이다.\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\organisms\\ProjectGroup.tsx",["241","242","243"],"import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Span from '../atoms/Span';\r\nimport Project from './Project';\r\n\r\nconst StyledProjectGroup = styled.div`\r\n  top: 119px;\r\n  padding-top: 62px;\r\n  padding-left: 17.7%;\r\n  padding-right: 17.7%;\r\n`;\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nconst ProjectGroup = (props: any): JSX.Element => {\r\n  const [projects, setProjects] = useState<any>([]);\r\n  // TODO : TRACK_ID를 받을 수 있도록 해야 한다.\r\n  const TRACK_ID = props.match.params.id;\r\n\r\n  const getProjectsOfUser = () => {\r\n    const cookie = localStorage.getItem('cookie');\r\n    try {\r\n      fetch(process.env.REACT_APP_SERVER_ADDRESS + `/user_tracks/${TRACK_ID}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          Authorization: cookie || '',\r\n        },\r\n      })\r\n        .then(res => res.json())\r\n        .then(res => setProjects(res.result));\r\n    } catch (error) {\r\n      throw new Error('authCheck error');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProjectsOfUser();\r\n  }, []);\r\n\r\n  return (\r\n    <StyledProjectGroup>\r\n      <Span\r\n        fontSize=\"18pt\"\r\n        lineHeight=\"30px\"\r\n        text=\"PROJECT\"\r\n        letterSpacing=\"-0.72pt\"\r\n        marginRight=\"236px\"\r\n      ></Span>\r\n      <Span\r\n        fontSize=\"18pt\"\r\n        lineHeight=\"30pt\"\r\n        text=\"POST\"\r\n        letterSpacing=\"-0.72pt\"\r\n      ></Span>\r\n      {projects?.map((project: any, index: number) => (\r\n        <Project\r\n          key={index}\r\n          projectNum={project.pid}\r\n          title={project.ptitle}\r\n          articles={project.child}\r\n          trackUrl={props.match.url}\r\n        ></Project>\r\n      ))}\r\n    </StyledProjectGroup>\r\n  );\r\n};\r\n\r\nexport default ProjectGroup;\r\n","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\organisms\\ProjectBanner.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\templates\\ArticleContents.tsx",["244","245","246","247"],"import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ArticleContents = (props: any): JSX.Element => {\r\n  const curArticle = props.match.params.article_id;\r\n  const [article, setArticle]: any = useState([]);\r\n\r\n  const getArticle = () => {\r\n    const cookie = localStorage.getItem('cookie');\r\n    try {\r\n      fetch(process.env.REACT_APP_SERVER_ADDRESS + `/articles/${curArticle}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          Authorization: cookie || '',\r\n        },\r\n      })\r\n        .then(res => res.json())\r\n        .then(res => setArticle(res.result));\r\n    } catch (error) {\r\n      throw new Error('authCheck error');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getArticle();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>TITLE : {article.TITLE}</h1>\r\n      <h2>CONTENTS : {article.CONTENTS}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArticleContents;\r\n","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\templates\\TrackList.tsx",["248","249","250"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport Button from '../atoms/Button';\r\nimport Span from '../atoms/Span';\r\n\r\nconst StyledTrackList = styled.div`\r\n  margin-left: 17.2%;\r\n  margin-right: 17.2%;\r\n  margin-top: 3.2%;\r\n  border: 1px solid red;\r\n`;\r\n\r\nconst StyledOneTrack = styled.div`\r\n  border: 1px solid green;\r\n`;\r\n\r\nconst TrackList = (props: any): JSX.Element => {\r\n  const [tracks, setTracks] = useState([]);\r\n\r\n  const getTracks = () => {\r\n    const cookie = localStorage.getItem('cookie');\r\n    try {\r\n      fetch(process.env.REACT_APP_SERVER_ADDRESS + `/tracks`, {\r\n        method: 'GET',\r\n        headers: {\r\n          Authorization: cookie || '',\r\n        },\r\n      })\r\n        .then(res => res.json())\r\n        .then(res => setTracks(res.result));\r\n    } catch (error) {\r\n      throw new Error('authCheck error');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTracks();\r\n  }, []);\r\n\r\n  return (\r\n    <StyledTrackList>\r\n      {tracks?.map((track: any, index) => (\r\n        <StyledOneTrack key={index}>\r\n          <Link\r\n            to={`${props.match.url}/${track.ID}`}\r\n            style={{ fontSize: '30px' }}\r\n          >\r\n            <Button key={index} width=\"100%\">\r\n              <Span text={track.DEPARTMENT} width=\"100%\"></Span>\r\n            </Button>\r\n          </Link>\r\n        </StyledOneTrack>\r\n      ))}\r\n    </StyledTrackList>\r\n  );\r\n};\r\n\r\nexport default TrackList;\r\n","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\atoms\\Span.tsx",["251","252","253"],"import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledSpan = styled.span<any>`\n  position: ${props => props.positon || 'static'};\n  padding-left: ${props => props.paddingLeft};\n  padding-right: ${props => props.paddingRight};\n  padding-top: ${props => props.paddingTop};\n  padding-bottom: ${props => props.paddingBottom};\n  font-size: ${props => props.fontSize};\n  line-height: ${props => props.lineHeight};\n  letter-spacing: ${props => props.letterSpacing};\n  margin-right: ${props => props.marginRight};\n  color: ${props => props.color || 'black'};\n  width: ${props => props.width};\n  height: ${props => props.height};\n`;\n\nconst Span = ({ text, ...rest }: any): JSX.Element => {\n  return <StyledSpan {...rest}>{text}</StyledSpan>;\n};\n\nexport default Span;\n","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\organisms\\Project.tsx",["254","255","256"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ProjectDescription from '../molecules/ProjectDescription';\r\nimport ProjectList from '../molecules/ProjectList';\r\n\r\nconst StyledProject = styled.div<any>`\r\n  width: 100%;\r\n  height: 300px;\r\n  border: 1px solid rgb(246, 246, 246);\r\n  border-radius: 10px;\r\n  box-shadow: 1.2px 2.7px 8px 0px rgba(0, 0, 0, 0.08);\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Project = (props: any): JSX.Element => {\r\n  const project_id = props.projectNum;\r\n  const title = props.title;\r\n  const articles = props.articles;\r\n  const trackUrl = props.trackUrl;\r\n\r\n  return (\r\n    <StyledProject>\r\n      <ProjectDescription title={title}></ProjectDescription>\r\n      <ProjectList\r\n        projectNum={project_id}\r\n        articles={articles}\r\n        trackUrl={trackUrl}\r\n      ></ProjectList>\r\n    </StyledProject>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\molecules\\ProjectDescription.tsx",["257","258","259","260"],"import React from 'react';\nimport styled from 'styled-components';\nimport Span from '../atoms/Span';\n\nconst ProjectDescription = (props: any) => {\n  const title = props.title;\n  return (\n    <div>\n      <Span\n        position=\"absolute\"\n        paddingLeft=\"1.5%\"\n        paddingTop=\"26px\"\n        fontSize=\"14px\"\n        lineHeight=\"30px\"\n        letterSpacing=\"-0.56pt\"\n        color=\"rgb(51,51,51)\"\n        text=\"DAY-2\"\n      ></Span>\n      <Span\n        position=\"absolute\"\n        paddingLeft=\"1.5%\"\n        paddingTop=\"84px\"\n        fontSize=\"24px\"\n        lineHeight=\"32px\"\n        letterSpacing=\"-0.96pt\"\n        color=\"rgb(51,51,51)\"\n        text={title}\n      ></Span>\n    </div>\n  );\n};\n\nexport default ProjectDescription;\n","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\molecules\\ProjectList.tsx",["261","262","263","264","265","266"],"import React from 'react';\nimport Span from '../atoms/Span';\nimport Article from './Article';\n\nconst ProjectList = (props: any) => {\n  const articles = props.articles;\n  const trackUrl = props.trackUrl;\n\n  return (\n    <div style={{ width: '100%' }}>\n      {articles?.map((article: any, index: any) => (\n        <Article\n          key={index}\n          paddingLeft=\"312px\"\n          paddingBottom=\"20px\"\n          title={article.atitle}\n          articleID={article.aid}\n          trackUrl={trackUrl}\n        ></Article>\n      ))}\n    </div>\n  );\n};\n\nexport default ProjectList;\n","C:\\Users\\강경수\\Desktop\\github\\LuckyData2021\\src\\components\\molecules\\Article.tsx",["267","268","269","270"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Button from '../atoms/Button';\nimport Span from '../atoms/Span';\n\nconst StyledArticle = styled.div<any>`\n  key: ${props => props.index};\n  padding-left: 312px;\n  padding-bottom: 20px;\n`;\n\nconst Article = (props: any) => {\n  const title = props.title;\n  const articleID = props.articleID;\n  const trackUrl = props.trackUrl;\n\n  return (\n    <StyledArticle>\n      <Link\n        to={`${trackUrl}/articles/${articleID}`}\n        style={{ fontSize: '30px' }}\n      >\n        <Button width=\"100%\">\n          <Span text={title} width=\"100%\"></Span>\n        </Button>\n      </Link>\n    </StyledArticle>\n  );\n};\n\nexport default Article;\n","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\index.tsx",[],[],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\App.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\molecules\\Header.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\molecules\\LoginButtonGroup.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\molecules\\Footer.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\organisms\\Modal.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\unreuse\\Store.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\pages\\Main.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\pages\\Home.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\pages\\Track.tsx",["271"],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\atoms\\Button.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\config\\index.ts",[],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\organisms\\ProjectGroup.tsx",["272","273","274","275"],"import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Span from '../atoms/Span';\r\nimport Project from './Project';\r\nimport setting from '../../config';\r\nimport P from '../atoms/P';\r\nimport LoadingScreen from './LoadingScreen';\r\nimport NoData from './NoData';\r\n\r\nconst StyledProjectGroup = styled.div`\r\n  top: 119px;\r\n  padding-top: 62px;\r\n`;\r\n\r\nconst ProjectGroup = ({ history, location, match }: any): JSX.Element => {\r\n  const [projects, setProjects] = useState<[] | null>(null);\r\n\r\n  useEffect(() => {\r\n    const getProjectsOfUser = async () => {\r\n      const cookie = localStorage.getItem('token');\r\n      const TRACK_ID = match.params.id;\r\n\r\n      try {\r\n        const url = setting.FETCH_ADDRESS + `/api/user_tracks/${TRACK_ID}`;\r\n        const response = await fetch(url, {\r\n          headers: {\r\n            Authorization: cookie || '',\r\n          },\r\n        });\r\n        const body = await response.json();\r\n        setProjects(body.result);\r\n      } catch (error) {\r\n        throw new Error(error);\r\n      }\r\n    };\r\n    getProjectsOfUser();\r\n  }, [history, location]);\r\n\r\n  return (\r\n    <StyledProjectGroup>\r\n      <Span\r\n        fontSize=\"18px\"\r\n        fontWeight=\"bold\"\r\n        lineHeight=\"30px\"\r\n        text=\"PROJECT\"\r\n        letterSpacing=\"-0.72pt\"\r\n        marginRight=\"236px\"\r\n      ></Span>\r\n      <Span\r\n        fontSize=\"18px\"\r\n        fontWeight=\"bold\"\r\n        lineHeight=\"30pt\"\r\n        text=\"POST\"\r\n        letterSpacing=\"-0.72pt\"\r\n      ></Span>\r\n\r\n      <div style={{ marginTop: '24px' }}>\r\n        {projects ? (\r\n          projects.length ? (\r\n            projects.map((project: any, index: number) => (\r\n              <Project\r\n                key={index}\r\n                title={`${index + 1}. ` + project.ptitle}\r\n                articles={project.child}\r\n                trackUrl={match.url}\r\n              ></Project>\r\n            ))\r\n          ) : (\r\n            <NoData></NoData>\r\n          )\r\n        ) : (\r\n          <LoadingScreen />\r\n        )}\r\n      </div>\r\n    </StyledProjectGroup>\r\n  );\r\n};\r\n\r\nexport default ProjectGroup;\r\n","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\unreuse\\Banner.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\organisms\\ProjectBanner.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\unreuse\\About.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\templates\\TrackList.tsx",["276"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport setting from '../../config';\r\nimport { track } from '../interfaces';\r\nimport LoadingScreen from '../organisms/LoadingScreen';\r\nimport NoData from '../organisms/NoData';\r\n\r\nconst StyledTrackList = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  max-width: 1240px;\r\n  margin: 30px auto;\r\n`;\r\n\r\nconst StyledOneTrack = styled.div`\r\n  width: 300px;\r\n  height: 300px;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  -webkit-box-shadow: 5px 5px 8px 0px rgba(0, 0, 0, 0.4);\r\n  margin: 30px;\r\n`;\r\n\r\nconst TrackCardImg = styled.img`\r\n  width: 300px;\r\n  height: 250px;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst TrackCardTitle = styled.span`\r\n  display: inline-block;\r\n  width: 300px;\r\n  height: 50px;\r\n  font-size: 1.15rem;\r\n  text-align: center;\r\n  line-height: 50px;\r\n`;\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst TrackList = ({ history, location, match }: any): JSX.Element => {\r\n  const [tracks, setTracks] = useState<[] | null>(null);\r\n\r\n  useEffect(() => {\r\n    const getTracks = async () => {\r\n      const cookie = localStorage.getItem('token');\r\n      try {\r\n        const url = setting.FETCH_ADDRESS + '/api/tracks';\r\n        const response = await fetch(url, {\r\n          headers: {\r\n            Authorization: cookie || '',\r\n          },\r\n        });\r\n        const body = await response.json();\r\n        setTracks(body.result);\r\n      } catch (error) {\r\n        throw new Error(error);\r\n      }\r\n    };\r\n    getTracks();\r\n  }, [history, location]);\r\n\r\n  return (\r\n    <StyledTrackList>\r\n      {tracks ? (\r\n        tracks.length ? (\r\n          tracks.map((track: track, index) => (\r\n            <StyledOneTrack key={index}>\r\n              <Link\r\n                to={`${match.url}/${track.ID}`}\r\n                style={{ fontSize: '30px' }}\r\n              >\r\n                <TrackCardImg src=\"/images/tracks.png\"></TrackCardImg>\r\n                <TrackCardTitle>{track.DEPARTMENT}</TrackCardTitle>\r\n              </Link>\r\n            </StyledOneTrack>\r\n          ))\r\n        ) : (\r\n          <div style={{ width: '100%' }}>\r\n            <NoData></NoData>\r\n          </div>\r\n        )\r\n      ) : (\r\n        <LoadingScreen></LoadingScreen>\r\n      )}\r\n    </StyledTrackList>\r\n  );\r\n};\r\n\r\nexport default TrackList;\r\n","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\organisms\\Project.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\atoms\\Span.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\molecules\\ProjectDescription.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\molecules\\ProjectList.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\atoms\\P.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\molecules\\Article.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\molecules\\Callback.tsx",["277"],"/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport qs from 'qs';\nimport setting from '../../config';\n\nfunction Callback({ history, location }: any): JSX.Element {\n  useEffect(() => {\n    async function getToken() {\n      const { code } = qs.parse(location.search, {\n        ignoreQueryPrefix: true,\n      });\n\n      try {\n        const url = setting.FETCH_ADDRESS + `/api/auth/github`;\n        const response: any = await axios.post(url, {\n          code,\n        });\n\n        localStorage.setItem('token', response.data.access_token);\n        // history.push('/'); // 로그인이 완료되면 보여줄 페이지\n        window.location.href = '/';\n      } catch (error) {\n        history.push('/error');\n      }\n    }\n\n    getToken();\n  }, [location, history]);\n  return <div>잠시만 기다려주세요</div>;\n}\n\nexport default Callback;\n","C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\interfaces\\index.ts",[],[],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\organisms\\LoadingScreen.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\organisms\\NoData.tsx",[],"C:\\Users\\강경수\\Desktop\\github\\luckydata\\client\\src\\components\\pages\\ArticleContents.tsx",["278","279","280"],{"ruleId":"281","severity":1,"message":"282","line":6,"column":10,"nodeType":"283","messageId":"284","endLine":6,"endColumn":28},{"ruleId":"281","severity":1,"message":"285","line":59,"column":10,"nodeType":"283","messageId":"284","endLine":59,"endColumn":12},{"ruleId":"281","severity":1,"message":"286","line":60,"column":10,"nodeType":"283","messageId":"284","endLine":60,"endColumn":18},{"ruleId":"287","severity":1,"message":"288","line":71,"column":28,"nodeType":"289","messageId":"290","endLine":71,"endColumn":31,"suggestions":"291"},{"ruleId":"287","severity":1,"message":"288","line":72,"column":34,"nodeType":"289","messageId":"290","endLine":72,"endColumn":37,"suggestions":"292"},{"ruleId":"293","severity":1,"message":"294","line":124,"column":22,"nodeType":"295","messageId":"296","endLine":124,"endColumn":33},{"ruleId":"293","severity":1,"message":"294","line":125,"column":25,"nodeType":"295","messageId":"296","endLine":125,"endColumn":38},{"ruleId":"287","severity":1,"message":"288","line":132,"column":27,"nodeType":"289","messageId":"290","endLine":132,"endColumn":30,"suggestions":"297"},{"ruleId":"298","severity":1,"message":"299","line":15,"column":16,"nodeType":"300","messageId":"301","endLine":15,"endColumn":30},{"ruleId":"287","severity":1,"message":"288","line":15,"column":27,"nodeType":"289","messageId":"290","endLine":15,"endColumn":30,"suggestions":"302"},{"ruleId":"287","severity":1,"message":"288","line":29,"column":14,"nodeType":"289","messageId":"290","endLine":29,"endColumn":17,"suggestions":"303"},{"ruleId":"287","severity":1,"message":"288","line":4,"column":30,"nodeType":"289","messageId":"290","endLine":4,"endColumn":33,"suggestions":"304"},{"ruleId":"298","severity":1,"message":"299","line":11,"column":14,"nodeType":"300","messageId":"301","endLine":11,"endColumn":30},{"ruleId":"287","severity":1,"message":"288","line":11,"column":27,"nodeType":"289","messageId":"290","endLine":11,"endColumn":30,"suggestions":"305"},{"ruleId":"281","severity":1,"message":"306","line":2,"column":8,"nodeType":"283","messageId":"284","endLine":2,"endColumn":14},{"ruleId":"287","severity":1,"message":"288","line":14,"column":30,"nodeType":"289","messageId":"290","endLine":14,"endColumn":33,"suggestions":"307"},{"ruleId":"287","severity":1,"message":"288","line":15,"column":44,"nodeType":"289","messageId":"290","endLine":15,"endColumn":47,"suggestions":"308"},{"ruleId":"287","severity":1,"message":"288","line":54,"column":32,"nodeType":"289","messageId":"290","endLine":54,"endColumn":35,"suggestions":"309"},{"ruleId":"281","severity":1,"message":"306","line":2,"column":8,"nodeType":"283","messageId":"284","endLine":2,"endColumn":14},{"ruleId":"298","severity":1,"message":"310","line":4,"column":26,"nodeType":"283","messageId":"311","endLine":4,"endColumn":36},{"ruleId":"287","severity":1,"message":"288","line":4,"column":33,"nodeType":"289","messageId":"290","endLine":4,"endColumn":36,"suggestions":"312"},{"ruleId":"287","severity":1,"message":"288","line":6,"column":32,"nodeType":"289","messageId":"290","endLine":6,"endColumn":35,"suggestions":"313"},{"ruleId":"298","severity":1,"message":"310","line":18,"column":20,"nodeType":"283","messageId":"311","endLine":18,"endColumn":30},{"ruleId":"287","severity":1,"message":"288","line":18,"column":27,"nodeType":"289","messageId":"290","endLine":18,"endColumn":30,"suggestions":"314"},{"ruleId":"287","severity":1,"message":"288","line":43,"column":28,"nodeType":"289","messageId":"290","endLine":43,"endColumn":31,"suggestions":"315"},{"ruleId":"287","severity":1,"message":"288","line":4,"column":32,"nodeType":"289","messageId":"290","endLine":4,"endColumn":35,"suggestions":"316"},{"ruleId":"298","severity":1,"message":"299","line":19,"column":15,"nodeType":"300","messageId":"301","endLine":19,"endColumn":37},{"ruleId":"287","severity":1,"message":"288","line":19,"column":34,"nodeType":"289","messageId":"290","endLine":19,"endColumn":37,"suggestions":"317"},{"ruleId":"287","severity":1,"message":"288","line":6,"column":34,"nodeType":"289","messageId":"290","endLine":6,"endColumn":37,"suggestions":"318"},{"ruleId":"298","severity":1,"message":"310","line":15,"column":18,"nodeType":"283","messageId":"311","endLine":15,"endColumn":28},{"ruleId":"287","severity":1,"message":"288","line":15,"column":25,"nodeType":"289","messageId":"290","endLine":15,"endColumn":28,"suggestions":"319"},{"ruleId":"281","severity":1,"message":"306","line":2,"column":8,"nodeType":"283","messageId":"284","endLine":2,"endColumn":14},{"ruleId":"298","severity":1,"message":"320","line":5,"column":28,"nodeType":"321","messageId":"322","endLine":5,"endColumn":43},{"ruleId":"298","severity":1,"message":"310","line":5,"column":29,"nodeType":"283","messageId":"311","endLine":5,"endColumn":39},{"ruleId":"287","severity":1,"message":"288","line":5,"column":36,"nodeType":"289","messageId":"290","endLine":5,"endColumn":39,"suggestions":"323"},{"ruleId":"281","severity":1,"message":"324","line":2,"column":8,"nodeType":"283","messageId":"284","endLine":2,"endColumn":12},{"ruleId":"298","severity":1,"message":"320","line":5,"column":21,"nodeType":"321","messageId":"322","endLine":5,"endColumn":36},{"ruleId":"298","severity":1,"message":"310","line":5,"column":22,"nodeType":"283","messageId":"311","endLine":5,"endColumn":32},{"ruleId":"287","severity":1,"message":"288","line":5,"column":29,"nodeType":"289","messageId":"290","endLine":5,"endColumn":32,"suggestions":"325"},{"ruleId":"287","severity":1,"message":"288","line":11,"column":32,"nodeType":"289","messageId":"290","endLine":11,"endColumn":35,"suggestions":"326"},{"ruleId":"287","severity":1,"message":"288","line":11,"column":44,"nodeType":"289","messageId":"290","endLine":11,"endColumn":47,"suggestions":"327"},{"ruleId":"287","severity":1,"message":"288","line":7,"column":34,"nodeType":"289","messageId":"290","endLine":7,"endColumn":37,"suggestions":"328"},{"ruleId":"298","severity":1,"message":"320","line":13,"column":17,"nodeType":"321","messageId":"322","endLine":13,"endColumn":32},{"ruleId":"298","severity":1,"message":"310","line":13,"column":18,"nodeType":"283","messageId":"311","endLine":13,"endColumn":28},{"ruleId":"287","severity":1,"message":"288","line":13,"column":25,"nodeType":"289","messageId":"290","endLine":13,"endColumn":28,"suggestions":"329"},{"ruleId":"287","severity":1,"message":"288","line":21,"column":27,"nodeType":"289","messageId":"290","endLine":21,"endColumn":30,"suggestions":"330"},{"ruleId":"281","severity":1,"message":"331","line":6,"column":8,"nodeType":"283","messageId":"284","endLine":6,"endColumn":9},{"ruleId":"298","severity":1,"message":"299","line":15,"column":23,"nodeType":"300","messageId":"301","endLine":15,"endColumn":56},{"ruleId":"287","severity":1,"message":"288","line":15,"column":53,"nodeType":"289","messageId":"290","endLine":15,"endColumn":56,"suggestions":"332"},{"ruleId":"287","severity":1,"message":"288","line":60,"column":36,"nodeType":"289","messageId":"290","endLine":60,"endColumn":39,"suggestions":"333"},{"ruleId":"298","severity":1,"message":"299","line":41,"column":20,"nodeType":"300","messageId":"301","endLine":41,"endColumn":53},{"ruleId":"298","severity":1,"message":"299","line":7,"column":19,"nodeType":"300","messageId":"301","endLine":7,"endColumn":45},{"ruleId":"287","severity":1,"message":"288","line":10,"column":39,"nodeType":"289","messageId":"290","endLine":10,"endColumn":42,"suggestions":"334"},{"ruleId":"287","severity":1,"message":"288","line":49,"column":39,"nodeType":"289","messageId":"290","endLine":49,"endColumn":42,"suggestions":"335"},{"ruleId":"287","severity":1,"message":"288","line":51,"column":42,"nodeType":"289","messageId":"290","endLine":51,"endColumn":45,"suggestions":"336"},"@typescript-eslint/no-unused-vars","'Http2ServerRequest' is defined but never used.","Identifier","unusedVar","'id' is assigned a value but never used.","'password' is assigned a value but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["337","338"],["339","340"],"no-console","Unexpected console statement.","MemberExpression","unexpected",["341","342"],"@typescript-eslint/explicit-module-boundary-types","Object pattern argument should be typed with a non-any type.","ObjectPattern","anyTypedArgUnnamed",["343","344"],["345","346"],["347","348"],["349","350"],"'styled' is defined but never used.",["351","352"],["353","354"],["355","356"],"Argument 'props' should be typed with a non-any type.","anyTypedArg",["357","358"],["359","360"],["361","362"],["363","364"],["365","366"],["367","368"],["369","370"],["371","372"],"Missing return type on function.","ArrowFunctionExpression","missingReturnType",["373","374"],"'Span' is defined but never used.",["375","376"],["377","378"],["379","380"],["381","382"],["383","384"],["385","386"],"'P' is defined but never used.",["387","388"],["389","390"],["391","392"],["393","394"],["395","396"],{"messageId":"397","fix":"398","desc":"399"},{"messageId":"400","fix":"401","desc":"402"},{"messageId":"397","fix":"403","desc":"399"},{"messageId":"400","fix":"404","desc":"402"},{"messageId":"397","fix":"405","desc":"399"},{"messageId":"400","fix":"406","desc":"402"},{"messageId":"397","fix":"407","desc":"399"},{"messageId":"400","fix":"408","desc":"402"},{"messageId":"397","fix":"409","desc":"399"},{"messageId":"400","fix":"410","desc":"402"},{"messageId":"397","fix":"411","desc":"399"},{"messageId":"400","fix":"412","desc":"402"},{"messageId":"397","fix":"413","desc":"399"},{"messageId":"400","fix":"414","desc":"402"},{"messageId":"397","fix":"415","desc":"399"},{"messageId":"400","fix":"416","desc":"402"},{"messageId":"397","fix":"417","desc":"399"},{"messageId":"400","fix":"418","desc":"402"},{"messageId":"397","fix":"419","desc":"399"},{"messageId":"400","fix":"420","desc":"402"},{"messageId":"397","fix":"421","desc":"399"},{"messageId":"400","fix":"422","desc":"402"},{"messageId":"397","fix":"423","desc":"399"},{"messageId":"400","fix":"424","desc":"402"},{"messageId":"397","fix":"425","desc":"399"},{"messageId":"400","fix":"426","desc":"402"},{"messageId":"397","fix":"427","desc":"399"},{"messageId":"400","fix":"428","desc":"402"},{"messageId":"397","fix":"429","desc":"399"},{"messageId":"400","fix":"430","desc":"402"},{"messageId":"397","fix":"431","desc":"399"},{"messageId":"400","fix":"432","desc":"402"},{"messageId":"397","fix":"433","desc":"399"},{"messageId":"400","fix":"434","desc":"402"},{"messageId":"397","fix":"435","desc":"399"},{"messageId":"400","fix":"436","desc":"402"},{"messageId":"397","fix":"437","desc":"399"},{"messageId":"400","fix":"438","desc":"402"},{"messageId":"397","fix":"439","desc":"399"},{"messageId":"400","fix":"440","desc":"402"},{"messageId":"397","fix":"441","desc":"399"},{"messageId":"400","fix":"442","desc":"402"},{"messageId":"397","fix":"443","desc":"399"},{"messageId":"400","fix":"444","desc":"402"},{"messageId":"397","fix":"445","desc":"399"},{"messageId":"400","fix":"446","desc":"402"},{"messageId":"397","fix":"447","desc":"399"},{"messageId":"400","fix":"448","desc":"402"},{"messageId":"397","fix":"449","desc":"399"},{"messageId":"400","fix":"450","desc":"402"},{"messageId":"397","fix":"451","desc":"399"},{"messageId":"400","fix":"452","desc":"402"},{"messageId":"397","fix":"453","desc":"399"},{"messageId":"400","fix":"454","desc":"402"},{"messageId":"397","fix":"455","desc":"399"},{"messageId":"400","fix":"456","desc":"402"},{"messageId":"397","fix":"457","desc":"399"},{"messageId":"400","fix":"458","desc":"402"},{"messageId":"397","fix":"459","desc":"399"},{"messageId":"400","fix":"460","desc":"402"},"suggestUnknown",{"range":"461","text":"462"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"461","text":"463"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"464","text":"462"},{"range":"464","text":"463"},{"range":"465","text":"462"},{"range":"465","text":"463"},{"range":"466","text":"462"},{"range":"466","text":"463"},{"range":"467","text":"462"},{"range":"467","text":"463"},{"range":"468","text":"462"},{"range":"468","text":"463"},{"range":"469","text":"462"},{"range":"469","text":"463"},{"range":"470","text":"462"},{"range":"470","text":"463"},{"range":"471","text":"462"},{"range":"471","text":"463"},{"range":"472","text":"462"},{"range":"472","text":"463"},{"range":"473","text":"462"},{"range":"473","text":"463"},{"range":"474","text":"462"},{"range":"474","text":"463"},{"range":"475","text":"462"},{"range":"475","text":"463"},{"range":"476","text":"462"},{"range":"476","text":"463"},{"range":"477","text":"462"},{"range":"477","text":"463"},{"range":"478","text":"462"},{"range":"478","text":"463"},{"range":"479","text":"462"},{"range":"479","text":"463"},{"range":"480","text":"462"},{"range":"480","text":"463"},{"range":"481","text":"462"},{"range":"481","text":"463"},{"range":"482","text":"462"},{"range":"482","text":"463"},{"range":"483","text":"462"},{"range":"483","text":"463"},{"range":"484","text":"462"},{"range":"484","text":"463"},{"range":"485","text":"462"},{"range":"485","text":"463"},{"range":"486","text":"462"},{"range":"486","text":"463"},{"range":"487","text":"462"},{"range":"487","text":"463"},{"range":"488","text":"462"},{"range":"488","text":"463"},{"range":"489","text":"462"},{"range":"489","text":"463"},{"range":"490","text":"462"},{"range":"490","text":"463"},{"range":"491","text":"462"},{"range":"491","text":"463"},{"range":"492","text":"462"},{"range":"492","text":"463"},[1770,1773],"unknown","never",[1838,1841],[3843,3846],[440,443],[681,684],[97,100],[282,285],[405,408],[472,475],[1449,1452],[128,131],[236,239],[445,448],[1054,1057],[99,102],[684,687],[224,227],[440,443],[137,140],[123,126],[282,285],[294,297],[214,217],[327,330],[624,627],[444,447],[1659,1662],[380,383],[1197,1200],[1309,1312]]